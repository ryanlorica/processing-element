Index.PACKAGES = {"testers.pe" : [{"name" : "testers.pe.InstantiateTest", "shortDescription" : "", "members_class" : [{"member" : "testers.pe.InstantiateTest#<init>", "error" : "unsupported entity"}, {"label" : "finish", "tail" : "(): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.finish", "link" : "testers\/pe\/InstantiateTest.html#finish:Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Bundle, expected: Map[String, BigInt]): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/pe\/InstantiateTest.html#expect(signal:chisel3.Bundle,expected:Map[String,BigInt]):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Aggregate, expected: IndexedSeq[BigInt]): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/pe\/InstantiateTest.html#expect(signal:chisel3.core.Aggregate,expected:IndexedSeq[BigInt]):Boolean", "kind" : "def"}, {"label" : "expectFixedPoint", "tail" : "(signal: FixedPoint, expected: Double, msg: ⇒ String, epsilon: Double): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expectFixedPoint", "link" : "testers\/pe\/InstantiateTest.html#expectFixedPoint(signal:chisel3.experimental.FixedPoint,expected:Double,msg:=>String,epsilon:Double):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Bits, expected: Int, msg: ⇒ String): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/pe\/InstantiateTest.html#expect(signal:chisel3.Bits,expected:Int,msg:=>String):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Bits, expected: BigInt, msg: ⇒ String): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/pe\/InstantiateTest.html#expect(signal:chisel3.Bits,expected:BigInt,msg:=>String):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(good: Boolean, msg: ⇒ String): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/pe\/InstantiateTest.html#expect(good:Boolean,msg:=>String):Boolean", "kind" : "def"}, {"label" : "peekAt", "tail" : "(data: Mem[TT], off: Int): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.peekAt", "link" : "testers\/pe\/InstantiateTest.html#peekAt[TT<:chisel3.Bits](data:chisel3.Mem[TT],off:Int):BigInt", "kind" : "def"}, {"label" : "peek", "tail" : "(signal: Bundle): LinkedHashMap[String, BigInt]", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/pe\/InstantiateTest.html#peek(signal:chisel3.Bundle):scala.collection.mutable.LinkedHashMap[String,BigInt]", "kind" : "def"}, {"label" : "peek", "tail" : "(signal: Aggregate): Seq[BigInt]", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/pe\/InstantiateTest.html#peek(signal:chisel3.core.Aggregate):Seq[BigInt]", "kind" : "def"}, {"label" : "peekFixedPoint", "tail" : "(signal: FixedPoint): Double", "member" : "chisel3.iotesters.PeekPokeTester.peekFixedPoint", "link" : "testers\/pe\/InstantiateTest.html#peekFixedPoint(signal:chisel3.experimental.FixedPoint):Double", "kind" : "def"}, {"label" : "peek", "tail" : "(signal: Bits): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/pe\/InstantiateTest.html#peek(signal:chisel3.Bits):BigInt", "kind" : "def"}, {"label" : "pokeAt", "tail" : "(data: Mem[TT], value: BigInt, off: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.pokeAt", "link" : "testers\/pe\/InstantiateTest.html#pokeAt[TT<:chisel3.Bits](data:chisel3.Mem[TT],value:BigInt,off:Int):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Aggregate, value: IndexedSeq[BigInt]): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(signal:chisel3.core.Aggregate,value:IndexedSeq[BigInt]):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bundle, map: Map[String, BigInt]): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(signal:chisel3.Bundle,map:Map[String,BigInt]):Unit", "kind" : "def"}, {"label" : "pokeFixedPoint", "tail" : "(signal: FixedPoint, value: Double): Unit", "member" : "chisel3.iotesters.PeekPokeTester.pokeFixedPoint", "link" : "testers\/pe\/InstantiateTest.html#pokeFixedPoint(signal:chisel3.experimental.FixedPoint,value:Double):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bits, value: Long): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(signal:chisel3.Bits,value:Long):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bits, value: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(signal:chisel3.Bits,value:Int):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bits, value: BigInt): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(signal:chisel3.Bits,value:BigInt):Unit", "kind" : "def"}, {"label" : "peek", "tail" : "(path: String): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/pe\/InstantiateTest.html#peek(path:String):BigInt", "kind" : "def"}, {"label" : "poke", "tail" : "(path: String, value: Long): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(path:String,value:Long):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(path: String, value: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(path:String,value:Int):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(path: String, value: BigInt): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/pe\/InstantiateTest.html#poke(path:String,value:BigInt):Unit", "kind" : "def"}, {"label" : "step", "tail" : "(n: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.step", "link" : "testers\/pe\/InstantiateTest.html#step(n:Int):Unit", "kind" : "def"}, {"label" : "reset", "tail" : "(n: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.reset", "link" : "testers\/pe\/InstantiateTest.html#reset(n:Int):Unit", "kind" : "def"}, {"label" : "longToUnsignedBigInt", "tail" : "(x: Long): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.longToUnsignedBigInt", "link" : "testers\/pe\/InstantiateTest.html#longToUnsignedBigInt(x:Long):BigInt", "kind" : "def"}, {"label" : "intToUnsignedBigInt", "tail" : "(x: Int): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.intToUnsignedBigInt", "link" : "testers\/pe\/InstantiateTest.html#intToUnsignedBigInt(x:Int):BigInt", "kind" : "def"}, {"label" : "int", "tail" : "(x: Bits): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.int", "link" : "testers\/pe\/InstantiateTest.html#int(x:chisel3.Bits):BigInt", "kind" : "implicit def"}, {"label" : "int", "tail" : "(x: Boolean): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.int", "link" : "testers\/pe\/InstantiateTest.html#int(x:Boolean):BigInt", "kind" : "implicit def"}, {"label" : "rnd", "tail" : ": Random", "member" : "chisel3.iotesters.PeekPokeTester.rnd", "link" : "testers\/pe\/InstantiateTest.html#rnd:scala.util.Random", "kind" : "val"}, {"label" : "fail", "tail" : "(): Unit", "member" : "chisel3.iotesters.PeekPokeTester.fail", "link" : "testers\/pe\/InstantiateTest.html#fail:Unit", "kind" : "def"}, {"label" : "t", "tail" : "(): Long", "member" : "chisel3.iotesters.PeekPokeTester.t", "link" : "testers\/pe\/InstantiateTest.html#t:Long", "kind" : "def"}, {"label" : "incTime", "tail" : "(n: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.incTime", "link" : "testers\/pe\/InstantiateTest.html#incTime(n:Int):Unit", "kind" : "def"}, {"label" : "backend", "tail" : ": Backend", "member" : "chisel3.iotesters.PeekPokeTester.backend", "link" : "testers\/pe\/InstantiateTest.html#backend:chisel3.iotesters.Backend", "kind" : "val"}, {"label" : "println", "tail" : "(msg: String): Unit", "member" : "chisel3.iotesters.PeekPokeTester.println", "link" : "testers\/pe\/InstantiateTest.html#println(msg:String):Unit", "kind" : "def"}, {"label" : "_base", "tail" : ": Int", "member" : "chisel3.iotesters.PeekPokeTester._base", "link" : "testers\/pe\/InstantiateTest.html#_base:Int", "kind" : "implicit val"}, {"label" : "_verbose", "tail" : ": Boolean", "member" : "chisel3.iotesters.PeekPokeTester._verbose", "link" : "testers\/pe\/InstantiateTest.html#_verbose:Boolean", "kind" : "implicit val"}, {"label" : "optionsManager", "tail" : ": TesterOptionsManager", "member" : "chisel3.iotesters.PeekPokeTester.optionsManager", "link" : "testers\/pe\/InstantiateTest.html#optionsManager:chisel3.iotesters.TesterOptionsManager", "kind" : "val"}, {"label" : "longToInt", "tail" : "(x: Long): Int", "member" : "chisel3.iotesters.PeekPokeTester.longToInt", "link" : "testers\/pe\/InstantiateTest.html#longToInt(x:Long):Int", "kind" : "implicit def"}, {"label" : "logger", "tail" : ": TestErrorLog", "member" : "chisel3.iotesters.PeekPokeTester.logger", "link" : "testers\/pe\/InstantiateTest.html#logger:chisel3.iotesters.TestErrorLog", "kind" : "implicit val"}, {"label" : "dut", "tail" : ": PE", "member" : "chisel3.iotesters.PeekPokeTester.dut", "link" : "testers\/pe\/InstantiateTest.html#dut:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "testers\/pe\/InstantiateTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "testers\/pe\/InstantiateTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "testers\/pe\/InstantiateTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "testers\/pe\/InstantiateTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "testers\/pe\/InstantiateTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "testers\/pe\/InstantiateTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "testers\/pe\/InstantiateTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/pe\/InstantiateTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/pe\/InstantiateTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/pe\/InstantiateTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "testers\/pe\/InstantiateTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "testers\/pe\/InstantiateTest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "testers\/pe\/InstantiateTest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "testers\/pe\/InstantiateTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "testers\/pe\/InstantiateTest.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "testers\/pe\/InstantiateTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "testers\/pe\/InstantiateTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "testers\/pe\/InstantiateTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "testers\/pe\/InstantiateTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "testers\/pe\/InstantiateTest.html", "kind" : "class"}, {"name" : "testers.pe.PESpec", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.Matchers.RegexWrapper", "link" : "testers\/pe\/PESpec.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.Matchers.StringShouldWrapper", "link" : "testers\/pe\/PESpec.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.Matchers.AnyShouldWrapper", "link" : "testers\/pe\/PESpec.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "testers\/pe\/PESpec.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfIncludeWordForCollectedString", "link" : "testers\/pe\/PESpec.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfEndWithWordForCollectedString", "link" : "testers\/pe\/PESpec.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfStartWithWordForCollectedString", "link" : "testers\/pe\/PESpec.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "testers\/pe\/PESpec.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfCollectedAny", "link" : "testers\/pe\/PESpec.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfBeWordForCollectedArray", "link" : "testers\/pe\/PESpec.html#ResultOfBeWordForCollectedArray[T]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfBeWordForCollectedAny", "link" : "testers\/pe\/PESpec.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfContainWordForCollectedAny", "link" : "testers\/pe\/PESpec.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfNotWordForCollectedAny", "link" : "testers\/pe\/PESpec.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfHaveWordForExtent", "link" : "testers\/pe\/PESpec.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.Matchers.TheSameInstanceAsPhrase", "link" : "testers\/pe\/PESpec.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.Matchers.AnWord", "link" : "testers\/pe\/PESpec.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.Matchers.AWord", "link" : "testers\/pe\/PESpec.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.Matchers.ValueWord", "link" : "testers\/pe\/PESpec.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.Matchers.KeyWord", "link" : "testers\/pe\/PESpec.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfFullyMatchWordForString", "link" : "testers\/pe\/PESpec.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfEndWithWordForString", "link" : "testers\/pe\/PESpec.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfStartWithWordForString", "link" : "testers\/pe\/PESpec.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfIncludeWordForString", "link" : "testers\/pe\/PESpec.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.Matchers.RegexWord", "link" : "testers\/pe\/PESpec.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfBeWordForAny", "link" : "testers\/pe\/PESpec.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.Matchers.HavePropertyMatcherGenerator", "link" : "testers\/pe\/PESpec.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "testers\/pe\/PESpec.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "testers\/pe\/PESpec.html#DeterminedByEquivalence[T]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "testers\/pe\/PESpec.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "testers\/pe\/PESpec.html#DecidedByEquality[A]extendsEquality[A]", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "testers\/pe\/PESpec.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "testers\/pe\/PESpec.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "testers\/pe\/PESpec.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.FlatSpecLike.InAndIgnoreMethods", "link" : "testers\/pe\/PESpec.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.TheyWord", "link" : "testers\/pe\/PESpec.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.FlatSpecLike.TheyVerbString", "link" : "testers\/pe\/PESpec.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.TheyVerbStringTaggedAs", "link" : "testers\/pe\/PESpec.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.IgnoreWord", "link" : "testers\/pe\/PESpec.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.FlatSpecLike.IgnoreVerbString", "link" : "testers\/pe\/PESpec.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "testers\/pe\/PESpec.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.ItWord", "link" : "testers\/pe\/PESpec.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.FlatSpecLike.ItVerbString", "link" : "testers\/pe\/PESpec.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.ItVerbStringTaggedAs", "link" : "testers\/pe\/PESpec.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.BehaviorWord", "link" : "testers\/pe\/PESpec.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.words.CanVerb.StringCanWrapperForVerb", "link" : "testers\/pe\/PESpec.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.words.MustVerb.StringMustWrapperForVerb", "link" : "testers\/pe\/PESpec.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.words.ShouldVerb.StringShouldWrapperForVerb", "link" : "testers\/pe\/PESpec.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "testers\/pe\/PESpec.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "testers\/pe\/PESpec.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "testers\/pe\/PESpec.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "testers\/pe\/PESpec.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "testers.pe.PESpec#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.Matchers.of", "link" : "testers\/pe\/PESpec.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.words.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.Matchers.convertToRegexWrapper", "link" : "testers\/pe\/PESpec.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.Matchers.convertToStringShouldWrapper", "link" : "testers\/pe\/PESpec.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.Matchers.convertToAnyShouldWrapper", "link" : "testers\/pe\/PESpec.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.Matchers.the", "link" : "testers\/pe\/PESpec.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.Matchers.an", "link" : "testers\/pe\/PESpec.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.words.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.Matchers.a", "link" : "testers\/pe\/PESpec.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.words.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.atMost", "link" : "testers\/pe\/PESpec.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.atMost", "link" : "testers\/pe\/PESpec.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.atMost", "link" : "testers\/pe\/PESpec.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.between", "link" : "testers\/pe\/PESpec.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.between", "link" : "testers\/pe\/PESpec.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.between", "link" : "testers\/pe\/PESpec.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.no", "link" : "testers\/pe\/PESpec.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.no", "link" : "testers\/pe\/PESpec.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.no", "link" : "testers\/pe\/PESpec.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.exactly", "link" : "testers\/pe\/PESpec.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.exactly", "link" : "testers\/pe\/PESpec.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.exactly", "link" : "testers\/pe\/PESpec.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.every", "link" : "testers\/pe\/PESpec.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.every", "link" : "testers\/pe\/PESpec.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.every", "link" : "testers\/pe\/PESpec.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.atLeast", "link" : "testers\/pe\/PESpec.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.atLeast", "link" : "testers\/pe\/PESpec.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.atLeast", "link" : "testers\/pe\/PESpec.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.all", "link" : "testers\/pe\/PESpec.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.all", "link" : "testers\/pe\/PESpec.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.all", "link" : "testers\/pe\/PESpec.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.Matchers.message", "link" : "testers\/pe\/PESpec.html#message(expectedMessage:String):org.scalatest.words.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: ⇒ Any): ResultOfThrownByApplication", "member" : "org.scalatest.Matchers.thrownBy", "link" : "testers\/pe\/PESpec.html#thrownBy(fun:=>Any):org.scalatest.words.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.Matchers.atMostOneElementOf", "link" : "testers\/pe\/PESpec.html#atMostOneElementOf[R](elements:scala.collection.GenTraversable[R]):org.scalatest.words.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.Matchers.atMostOneOf", "link" : "testers\/pe\/PESpec.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.Matchers.inOrderElementsOf", "link" : "testers\/pe\/PESpec.html#inOrderElementsOf[R](elements:scala.collection.GenTraversable[R]):org.scalatest.words.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.Matchers.inOrder", "link" : "testers\/pe\/PESpec.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.Matchers.allElementsOf", "link" : "testers\/pe\/PESpec.html#allElementsOf[R](elements:scala.collection.GenTraversable[R]):org.scalatest.words.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.Matchers.allOf", "link" : "testers\/pe\/PESpec.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.Matchers.inOrderOnly", "link" : "testers\/pe\/PESpec.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.Matchers.only", "link" : "testers\/pe\/PESpec.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.Matchers.theSameElementsInOrderAs", "link" : "testers\/pe\/PESpec.html#theSameElementsInOrderAs(xs:scala.collection.GenTraversable[_]):org.scalatest.words.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.Matchers.theSameElementsAs", "link" : "testers\/pe\/PESpec.html#theSameElementsAs(xs:scala.collection.GenTraversable[_]):org.scalatest.words.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.Matchers.noElementsOf", "link" : "testers\/pe\/PESpec.html#noElementsOf(elements:scala.collection.GenTraversable[Any]):org.scalatest.words.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.Matchers.noneOf", "link" : "testers\/pe\/PESpec.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.Matchers.atLeastOneElementOf", "link" : "testers\/pe\/PESpec.html#atLeastOneElementOf(elements:scala.collection.GenTraversable[Any]):org.scalatest.words.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.Matchers.atLeastOneOf", "link" : "testers\/pe\/PESpec.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.Matchers.oneElementOf", "link" : "testers\/pe\/PESpec.html#oneElementOf(elements:scala.collection.GenTraversable[Any]):org.scalatest.words.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.Matchers.oneOf", "link" : "testers\/pe\/PESpec.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.Matchers.definedAt", "link" : "testers\/pe\/PESpec.html#definedAt[T](right:T):org.scalatest.words.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.Matchers.>=", "link" : "testers\/pe\/PESpec.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.words.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.Matchers.<=", "link" : "testers\/pe\/PESpec.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.words.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.Matchers.>", "link" : "testers\/pe\/PESpec.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.words.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.Matchers.<", "link" : "testers\/pe\/PESpec.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.words.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.Matchers.regex", "link" : "testers\/pe\/PESpec.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.Matchers.theSameInstanceAs", "link" : "testers\/pe\/PESpec.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.Matchers.an", "link" : "testers\/pe\/PESpec.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.Matchers.a", "link" : "testers\/pe\/PESpec.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.Matchers.value", "link" : "testers\/pe\/PESpec.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.Matchers.key", "link" : "testers\/pe\/PESpec.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.Matchers.equal", "link" : "testers\/pe\/PESpec.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.Matchers.equal", "link" : "testers\/pe\/PESpec.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "testers\/pe\/PESpec.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "testers\/pe\/PESpec.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "testers\/pe\/PESpec.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "testers\/pe\/PESpec.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.words.MatcherWords.equal", "link" : "testers\/pe\/PESpec.html#equal(right:Any):org.scalatest.matchers.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.words.MatcherWords.matchPattern", "link" : "testers\/pe\/PESpec.html#matchPattern:org.scalatest.words.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.words.MatcherWords.typeCheck", "link" : "testers\/pe\/PESpec.html#typeCheck:org.scalatest.words.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.words.MatcherWords.compile", "link" : "testers\/pe\/PESpec.html#compile:org.scalatest.words.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.words.MatcherWords.empty", "link" : "testers\/pe\/PESpec.html#empty:org.scalatest.words.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.words.MatcherWords.writable", "link" : "testers\/pe\/PESpec.html#writable:org.scalatest.words.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.words.MatcherWords.readable", "link" : "testers\/pe\/PESpec.html#readable:org.scalatest.words.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.words.MatcherWords.exist", "link" : "testers\/pe\/PESpec.html#exist:org.scalatest.words.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.words.MatcherWords.noException", "link" : "testers\/pe\/PESpec.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.words.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.words.MatcherWords.defined", "link" : "testers\/pe\/PESpec.html#defined:org.scalatest.words.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.words.MatcherWords.sorted", "link" : "testers\/pe\/PESpec.html#sorted:org.scalatest.words.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.words.MatcherWords.size", "link" : "testers\/pe\/PESpec.html#size:org.scalatest.words.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.words.MatcherWords.length", "link" : "testers\/pe\/PESpec.html#length:org.scalatest.words.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.words.MatcherWords.not", "link" : "testers\/pe\/PESpec.html#not:org.scalatest.words.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.words.MatcherWords.contain", "link" : "testers\/pe\/PESpec.html#contain:org.scalatest.words.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.words.MatcherWords.be", "link" : "testers\/pe\/PESpec.html#be:org.scalatest.words.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.words.MatcherWords.have", "link" : "testers\/pe\/PESpec.html#have:org.scalatest.words.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.words.MatcherWords.include", "link" : "testers\/pe\/PESpec.html#include:org.scalatest.words.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.words.MatcherWords.endWith", "link" : "testers\/pe\/PESpec.html#endWith:org.scalatest.words.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.words.MatcherWords.startWith", "link" : "testers\/pe\/PESpec.html#startWith:org.scalatest.words.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.words.MatcherWords.fullyMatch", "link" : "testers\/pe\/PESpec.html#fullyMatch:org.scalatest.words.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "testers\/pe\/PESpec.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.FlatSpec.toString", "link" : "testers\/pe\/PESpec.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.FlatSpecLike.testDataFor", "link" : "testers\/pe\/PESpec.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.FlatSpecLike.styleName", "link" : "testers\/pe\/PESpec.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.FlatSpecLike.behave", "link" : "testers\/pe\/PESpec.html#behave:org.scalatest.words.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FlatSpecLike.run", "link" : "testers\/pe\/PESpec.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.FlatSpecLike.testNames", "link" : "testers\/pe\/PESpec.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FlatSpecLike.runTests", "link" : "testers\/pe\/PESpec.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.FlatSpecLike.runTest", "link" : "testers\/pe\/PESpec.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.FlatSpecLike.tags", "link" : "testers\/pe\/PESpec.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.FlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "testers\/pe\/PESpec.html#shorthandSharedTestRegistrationFunction:org.scalatest.words.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.FlatSpecLike.shorthandTestRegistrationFunction", "link" : "testers\/pe\/PESpec.html#shorthandTestRegistrationFunction:org.scalatest.words.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.FlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "testers\/pe\/PESpec.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.words.ResultOfTaggedAsInvocation):FlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.FlatSpecLike.convertToInAndIgnoreMethods", "link" : "testers\/pe\/PESpec.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.words.ResultOfStringPassedToVerb):FlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.FlatSpecLike.they", "link" : "testers\/pe\/PESpec.html#they:FlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.FlatSpecLike.ignore", "link" : "testers\/pe\/PESpec.html#ignore:FlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.FlatSpecLike.it", "link" : "testers\/pe\/PESpec.html#it:FlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.FlatSpecLike.behavior", "link" : "testers\/pe\/PESpec.html#behavior:FlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FlatSpecLike.registerIgnoredTest", "link" : "testers\/pe\/PESpec.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FlatSpecLike.registerTest", "link" : "testers\/pe\/PESpec.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.FlatSpecLike.markup", "link" : "testers\/pe\/PESpec.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.FlatSpecLike.alert", "link" : "testers\/pe\/PESpec.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.FlatSpecLike.note", "link" : "testers\/pe\/PESpec.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.FlatSpecLike.info", "link" : "testers\/pe\/PESpec.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.words.CanVerb.convertToStringCanWrapper", "link" : "testers\/pe\/PESpec.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.words.MustVerb.convertToStringMustWrapperForVerb", "link" : "testers\/pe\/PESpec.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.words.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "testers\/pe\/PESpec.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "testers\/pe\/PESpec.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "testers\/pe\/PESpec.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "testers\/pe\/PESpec.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "testers\/pe\/PESpec.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "testers\/pe\/PESpec.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "testers\/pe\/PESpec.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(): Unit", "member" : "org.scalatest.Suite.execute", "link" : "testers\/pe\/PESpec.html#execute:Unit", "kind" : "final def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "testers\/pe\/PESpec.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "testers\/pe\/PESpec.html#nestedSuites:scala.collection.immutable.IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "testers\/pe\/PESpec.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "testers\/pe\/PESpec.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "testers\/pe\/PESpec.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "testers\/pe\/PESpec.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/pe\/PESpec.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/pe\/PESpec.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/pe\/PESpec.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/pe\/PESpec.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/pe\/PESpec.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/pe\/PESpec.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/pe\/PESpec.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/pe\/PESpec.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "testers\/pe\/PESpec.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "testers\/pe\/PESpec.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "testers\/pe\/PESpec.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "testers\/pe\/PESpec.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "testers\/pe\/PESpec.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "testers\/pe\/PESpec.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "testers\/pe\/PESpec.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "testers\/pe\/PESpec.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "testers\/pe\/PESpec.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "testers\/pe\/PESpec.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "testers\/pe\/PESpec.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "testers\/pe\/PESpec.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "testers\/pe\/PESpec.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "testers\/pe\/PESpec.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "testers\/pe\/PESpec.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "testers\/pe\/PESpec.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "testers\/pe\/PESpec.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "testers\/pe\/PESpec.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "testers\/pe\/PESpec.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "testers\/pe\/PESpec.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "testers\/pe\/PESpec.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "testers\/pe\/PESpec.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "testers\/pe\/PESpec.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "testers\/pe\/PESpec.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "testers\/pe\/PESpec.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "testers\/pe\/PESpec.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "testers\/pe\/PESpec.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "testers\/pe\/PESpec.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "testers\/pe\/PESpec.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "testers\/pe\/PESpec.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "testers\/pe\/PESpec.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "testers\/pe\/PESpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "testers\/pe\/PESpec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "testers\/pe\/PESpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "testers\/pe\/PESpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "testers\/pe\/PESpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "testers\/pe\/PESpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "testers\/pe\/PESpec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/pe\/PESpec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/pe\/PESpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/pe\/PESpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "testers\/pe\/PESpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "testers\/pe\/PESpec.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "testers\/pe\/PESpec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "testers\/pe\/PESpec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "testers\/pe\/PESpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "testers\/pe\/PESpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "testers\/pe\/PESpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "testers\/pe\/PESpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "testers\/pe\/PESpec.html", "kind" : "class"}], "procelem" : [{"name" : "procelem.Config", "shortDescription" : "All the necessary configurations for a PE", "members_case class" : [{"label" : "m", "tail" : ": Int", "member" : "procelem.Config.m", "link" : "procelem\/Config.html#m:Int", "kind" : "val"}, {"label" : "n", "tail" : ": Int", "member" : "procelem.Config.n", "link" : "procelem\/Config.html#n:Int", "kind" : "val"}, {"label" : "nRPorts", "tail" : ": Int", "member" : "procelem.Config.nRPorts", "link" : "procelem\/Config.html#nRPorts:Int", "kind" : "val"}, {"label" : "nLPorts", "tail" : ": Int", "member" : "procelem.Config.nLPorts", "link" : "procelem\/Config.html#nLPorts:Int", "kind" : "val"}, {"label" : "nRSinks", "tail" : ": Int", "member" : "procelem.Config.nRSinks", "link" : "procelem\/Config.html#nRSinks:Int", "kind" : "val"}, {"label" : "nLSinks", "tail" : ": Int", "member" : "procelem.Config.nLSinks", "link" : "procelem\/Config.html#nLSinks:Int", "kind" : "val"}, {"label" : "nRSources", "tail" : ": Int", "member" : "procelem.Config.nRSources", "link" : "procelem\/Config.html#nRSources:Int", "kind" : "val"}, {"label" : "nLSources", "tail" : ": Int", "member" : "procelem.Config.nLSources", "link" : "procelem\/Config.html#nLSources:Int", "kind" : "val"}, {"label" : "allExtant", "tail" : ": List[ComponentType]", "member" : "procelem.Config.allExtant", "link" : "procelem\/Config.html#allExtant:List[procelem.enums.ComponentType]", "kind" : "val"}, {"label" : "rightExtant", "tail" : ": List[ComponentType with RightType]", "member" : "procelem.Config.rightExtant", "link" : "procelem\/Config.html#rightExtant:List[procelem.enums.ComponentTypewithprocelem.enums.RightType]", "kind" : "val"}, {"label" : "leftExtant", "tail" : ": List[ComponentType with LeftType]", "member" : "procelem.Config.leftExtant", "link" : "procelem\/Config.html#leftExtant:List[procelem.enums.ComponentTypewithprocelem.enums.LeftType]", "kind" : "val"}, {"member" : "procelem.Config#<init>", "error" : "unsupported entity"}, {"label" : "encoding", "tail" : ": EncodingType", "member" : "procelem.Config.encoding", "link" : "procelem\/Config.html#encoding:procelem.enums.EncodingType", "kind" : "val"}, {"label" : "simd", "tail" : ": (Int, Int)", "member" : "procelem.Config.simd", "link" : "procelem\/Config.html#simd:(Int,Int)", "kind" : "val"}, {"label" : "memSize", "tail" : ": Map[RFType, Int]", "member" : "procelem.Config.memSize", "link" : "procelem\/Config.html#memSize:Map[procelem.enums.RFType,Int]", "kind" : "val"}, {"label" : "componentList", "tail" : ": List[ComponentType]", "member" : "procelem.Config.componentList", "link" : "procelem\/Config.html#componentList:List[procelem.enums.ComponentType]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/Config.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/Config.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/Config.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/Config.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/Config.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/Config.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/Config.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/Config.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/Config.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/Config.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/Config.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/Config.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/Config.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/Config.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/Config.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/Config.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "procelem\/Config.html", "kind" : "case class"}, {"name" : "procelem.PE", "shortDescription" : "", "object" : "procelem\/PE$.html", "members_class" : [{"label" : "switcher", "tail" : ": Switcher", "member" : "procelem.PE.switcher", "link" : "procelem\/PE.html#switcher:procelem.components.Switcher", "kind" : "val"}, {"label" : "io", "tail" : ": PEIO", "member" : "procelem.PE.io", "link" : "procelem\/PE.html#io:procelem.PEIO", "kind" : "val"}, {"member" : "procelem.PE#<init>", "error" : "unsupported entity"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.core.LegacyModule.nameIds", "link" : "procelem\/PE.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "_compatIoPortBound", "tail" : "(): Boolean", "member" : "chisel3.core.LegacyModule._compatIoPortBound", "link" : "procelem\/PE.html#_compatIoPortBound():Boolean", "kind" : "def"}, {"label" : "override_reset", "tail" : ": Option[Bool]", "member" : "chisel3.core.LegacyModule.override_reset", "link" : "procelem\/PE.html#override_reset:Option[chisel3.core.Bool]", "kind" : "var"}, {"label" : "override_clock", "tail" : ": Option[Clock]", "member" : "chisel3.core.LegacyModule.override_clock", "link" : "procelem\/PE.html#override_clock:Option[chisel3.core.Clock]", "kind" : "var"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.core.ImplicitModule.reset", "link" : "procelem\/PE.html#reset:chisel3.core.Reset", "kind" : "val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.core.ImplicitModule.clock", "link" : "procelem\/PE.html#clock:chisel3.core.Clock", "kind" : "val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.core.UserModule.compileOptions", "link" : "procelem\/PE.html#compileOptions:chisel3.core.CompileOptions", "kind" : "val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.core.UserModule.getPorts", "link" : "procelem\/PE.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.core.UserModule.getCommands", "link" : "procelem\/PE.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.core.BaseModule.instanceName", "link" : "procelem\/PE.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.core.BaseModule.IO", "link" : "procelem\/PE.html#IO[T<:chisel3.core.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.core.BaseModule._bindIoInPlace", "link" : "procelem\/PE.html#_bindIoInPlace(iodef:chisel3.core.Data):Unit", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotation: ChiselAnnotation): Unit", "member" : "chisel3.core.BaseModule.annotate", "link" : "procelem\/PE.html#annotate(annotation:chisel3.core.ChiselAnnotation):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.core.BaseModule._compatAutoWrapPorts", "link" : "procelem\/PE.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.core.BaseModule.toNamed", "link" : "procelem\/PE.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.core.BaseModule.name", "link" : "procelem\/PE.html#name:String", "kind" : "final val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.core.BaseModule.desiredName", "link" : "procelem\/PE.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.core.BaseModule.portsSize", "link" : "procelem\/PE.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.core.BaseModule.portsContains", "link" : "procelem\/PE.html#portsContains(elem:chisel3.core.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.core.BaseModule.getModulePorts", "link" : "procelem\/PE.html#getModulePorts:Seq[chisel3.core.Data]", "kind" : "def"}, {"label" : "getIds", "tail" : "(): Seq[HasId]", "member" : "chisel3.core.BaseModule.getIds", "link" : "procelem\/PE.html#getIds:Seq[chisel3.internal.HasId]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.core.BaseModule._closed", "link" : "procelem\/PE.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "procelem\/PE.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "procelem\/PE.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "procelem\/PE.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "procelem\/PE.html#pathName:String", "kind" : "def"}, {"label" : "suggestName", "tail" : "(name: ⇒ String): PE.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "procelem\/PE.html#suggestName(name:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "procelem\/PE.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "procelem\/PE.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/PE.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/PE.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/PE.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/PE.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/PE.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/PE.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/PE.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PE.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PE.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PE.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/PE.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/PE.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/PE.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/PE.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/PE.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/PE.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/PE.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "numInputPorts", "tail" : "(cp: ComponentType): Int", "member" : "procelem.PE.numInputPorts", "link" : "procelem\/PE$.html#numInputPorts(cp:procelem.enums.ComponentType):Int", "kind" : "def"}, {"label" : "allRFs", "tail" : ": List[RFType]", "member" : "procelem.PE.allRFs", "link" : "procelem\/PE$.html#allRFs:List[procelem.enums.RFType]", "kind" : "val"}, {"label" : "rightRFs", "tail" : ": List[RFType with RightType]", "member" : "procelem.PE.rightRFs", "link" : "procelem\/PE$.html#rightRFs:List[procelem.enums.RFTypewithprocelem.enums.RightType]", "kind" : "val"}, {"label" : "leftRFs", "tail" : ": List[RFType with LeftType]", "member" : "procelem.PE.leftRFs", "link" : "procelem\/PE$.html#leftRFs:List[procelem.enums.RFTypewithprocelem.enums.LeftType]", "kind" : "val"}, {"label" : "allPorts", "tail" : ": List[IOPort]", "member" : "procelem.PE.allPorts", "link" : "procelem\/PE$.html#allPorts:List[procelem.enums.IOPort]", "kind" : "val"}, {"label" : "rightPorts", "tail" : ": List[IOPort with RightType]", "member" : "procelem.PE.rightPorts", "link" : "procelem\/PE$.html#rightPorts:List[procelem.enums.IOPortwithprocelem.enums.RightType]", "kind" : "val"}, {"label" : "leftPorts", "tail" : ": List[IOPort with LeftType]", "member" : "procelem.PE.leftPorts", "link" : "procelem\/PE$.html#leftPorts:List[procelem.enums.IOPortwithprocelem.enums.LeftType]", "kind" : "val"}, {"label" : "allComponents", "tail" : ": List[ComponentType]", "member" : "procelem.PE.allComponents", "link" : "procelem\/PE$.html#allComponents:List[procelem.enums.ComponentType]", "kind" : "val"}, {"label" : "rightComponents", "tail" : ": List[ComponentType with RightType]", "member" : "procelem.PE.rightComponents", "link" : "procelem\/PE$.html#rightComponents:List[procelem.enums.ComponentTypewithprocelem.enums.RightType]", "kind" : "val"}, {"label" : "leftComponents", "tail" : ": List[ComponentType with LeftType]", "member" : "procelem.PE.leftComponents", "link" : "procelem\/PE$.html#leftComponents:List[procelem.enums.ComponentTypewithprocelem.enums.LeftType]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/PE$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/PE$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/PE$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/PE$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/PE$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/PE$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/PE$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PE$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PE$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PE$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/PE$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/PE$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/PE$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/PE$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/PE$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/PE$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/PE$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/PE$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/PE$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/PE.html", "kind" : "class"}, {"name" : "procelem.PEIO", "shortDescription" : "", "members_class" : [{"label" : "switcherIO", "tail" : ": SwitcherIO", "member" : "procelem.PEIO.switcherIO", "link" : "procelem\/PEIO.html#switcherIO:procelem.components.SwitcherIO", "kind" : "val"}, {"label" : "programWire", "tail" : ": ProgramIO", "member" : "procelem.PEIO.programWire", "link" : "procelem\/PEIO.html#programWire:procelem.ProgramIO", "kind" : "val"}, {"label" : "cloneType", "tail" : "(): PEIO.this.type", "member" : "procelem.PEIO.cloneType", "link" : "procelem\/PEIO.html#cloneType:PEIO.this.type", "kind" : "def"}, {"member" : "procelem.PEIO#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.core.Bundle.toPrintable", "link" : "procelem\/PEIO.html#toPrintable:chisel3.core.Printable", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.core.Bundle.ignoreSeq", "link" : "procelem\/PEIO.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "elements", "tail" : ": ListMap[String, Data]", "member" : "chisel3.core.Bundle.elements", "link" : "procelem\/PEIO.html#elements:scala.collection.immutable.ListMap[String,chisel3.core.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.core.Bundle.className", "link" : "procelem\/PEIO.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.core.Record.getElements", "link" : "procelem\/PEIO.html#getElements:Seq[chisel3.core.Data]", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.core.Aggregate.do_asUInt", "link" : "procelem\/PEIO.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.core.CompileOptions):chisel3.core.UInt", "kind" : "def"}, {"label" : "toBits", "tail" : "(compileOptions: CompileOptions): UInt", "member" : "chisel3.core.Data.toBits", "link" : "procelem\/PEIO.html#toBits(implicitcompileOptions:chisel3.core.CompileOptions):chisel3.core.UInt", "kind" : "def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.core.Data.asUInt", "link" : "procelem\/PEIO.html#asUInt():chisel3.core.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.core.Data.do_asTypeOf", "link" : "procelem\/PEIO.html#do_asTypeOf[T<:chisel3.core.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.core.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.core.Data.asTypeOf", "link" : "procelem\/PEIO.html#asTypeOf[T<:chisel3.core.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.core.Data.widthOption", "link" : "procelem\/PEIO.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.core.Data.isWidthKnown", "link" : "procelem\/PEIO.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.core.Data.getWidth", "link" : "procelem\/PEIO.html#getWidth:Int", "kind" : "final def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.core.Data.isLit", "link" : "procelem\/PEIO.html#isLit():Boolean", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.core.Data.litValue", "link" : "procelem\/PEIO.html#litValue():BigInt", "kind" : "def"}, {"label" : "litArg", "tail" : "(): Option[LitArg]", "member" : "chisel3.core.Data.litArg", "link" : "procelem\/PEIO.html#litArg():Option[chisel3.internal.firrtl.LitArg]", "kind" : "def"}, {"label" : "<>", "tail" : "(that: Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.core.Data.<>", "link" : "procelem\/PEIO.html#<>(that:chisel3.core.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.core.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.core.Data.:=", "link" : "procelem\/PEIO.html#:=(that:chisel3.core.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.core.CompileOptions):Unit", "kind" : "final def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.core.Data.binding_=", "link" : "procelem\/PEIO.html#binding_=(target:chisel3.core.Binding):Unit", "kind" : "def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "procelem\/PEIO.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "procelem\/PEIO.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "procelem\/PEIO.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "procelem\/PEIO.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "procelem\/PEIO.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "procelem\/PEIO.html#instanceName:String", "kind" : "def"}, {"label" : "suggestName", "tail" : "(name: ⇒ String): PEIO.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "procelem\/PEIO.html#suggestName(name:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "procelem\/PEIO.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "procelem\/PEIO.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/PEIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/PEIO.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/PEIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/PEIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/PEIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/PEIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/PEIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PEIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PEIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/PEIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/PEIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/PEIO.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/PEIO.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/PEIO.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/PEIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/PEIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/PEIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/PEIO.html", "kind" : "class"}, {"name" : "procelem.ProgramIO", "shortDescription" : "", "members_class" : [{"label" : "rightProgram", "tail" : ": Vec[UInt]", "member" : "procelem.ProgramIO.rightProgram", "link" : "procelem\/ProgramIO.html#rightProgram:chisel3.core.Vec[chisel3.core.UInt]", "kind" : "val"}, {"label" : "leftProgram", "tail" : ": Vec[UInt]", "member" : "procelem.ProgramIO.leftProgram", "link" : "procelem\/ProgramIO.html#leftProgram:chisel3.core.Vec[chisel3.core.UInt]", "kind" : "val"}, {"label" : "enable", "tail" : ": Bool", "member" : "procelem.ProgramIO.enable", "link" : "procelem\/ProgramIO.html#enable:chisel3.core.Bool", "kind" : "val"}, {"label" : "cloneType", "tail" : "(): ProgramIO.this.type", "member" : "procelem.ProgramIO.cloneType", "link" : "procelem\/ProgramIO.html#cloneType:ProgramIO.this.type", "kind" : "def"}, {"member" : "procelem.ProgramIO#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.core.Bundle.toPrintable", "link" : "procelem\/ProgramIO.html#toPrintable:chisel3.core.Printable", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.core.Bundle.ignoreSeq", "link" : "procelem\/ProgramIO.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "elements", "tail" : ": ListMap[String, Data]", "member" : "chisel3.core.Bundle.elements", "link" : "procelem\/ProgramIO.html#elements:scala.collection.immutable.ListMap[String,chisel3.core.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.core.Bundle.className", "link" : "procelem\/ProgramIO.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.core.Record.getElements", "link" : "procelem\/ProgramIO.html#getElements:Seq[chisel3.core.Data]", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.core.Aggregate.do_asUInt", "link" : "procelem\/ProgramIO.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.core.CompileOptions):chisel3.core.UInt", "kind" : "def"}, {"label" : "toBits", "tail" : "(compileOptions: CompileOptions): UInt", "member" : "chisel3.core.Data.toBits", "link" : "procelem\/ProgramIO.html#toBits(implicitcompileOptions:chisel3.core.CompileOptions):chisel3.core.UInt", "kind" : "def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.core.Data.asUInt", "link" : "procelem\/ProgramIO.html#asUInt():chisel3.core.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.core.Data.do_asTypeOf", "link" : "procelem\/ProgramIO.html#do_asTypeOf[T<:chisel3.core.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.core.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.core.Data.asTypeOf", "link" : "procelem\/ProgramIO.html#asTypeOf[T<:chisel3.core.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.core.Data.widthOption", "link" : "procelem\/ProgramIO.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.core.Data.isWidthKnown", "link" : "procelem\/ProgramIO.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.core.Data.getWidth", "link" : "procelem\/ProgramIO.html#getWidth:Int", "kind" : "final def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.core.Data.isLit", "link" : "procelem\/ProgramIO.html#isLit():Boolean", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.core.Data.litValue", "link" : "procelem\/ProgramIO.html#litValue():BigInt", "kind" : "def"}, {"label" : "litArg", "tail" : "(): Option[LitArg]", "member" : "chisel3.core.Data.litArg", "link" : "procelem\/ProgramIO.html#litArg():Option[chisel3.internal.firrtl.LitArg]", "kind" : "def"}, {"label" : "<>", "tail" : "(that: Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.core.Data.<>", "link" : "procelem\/ProgramIO.html#<>(that:chisel3.core.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.core.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.core.Data.:=", "link" : "procelem\/ProgramIO.html#:=(that:chisel3.core.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.core.CompileOptions):Unit", "kind" : "final def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.core.Data.binding_=", "link" : "procelem\/ProgramIO.html#binding_=(target:chisel3.core.Binding):Unit", "kind" : "def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "procelem\/ProgramIO.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "procelem\/ProgramIO.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "procelem\/ProgramIO.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "procelem\/ProgramIO.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "procelem\/ProgramIO.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "procelem\/ProgramIO.html#instanceName:String", "kind" : "def"}, {"label" : "suggestName", "tail" : "(name: ⇒ String): ProgramIO.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "procelem\/ProgramIO.html#suggestName(name:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "procelem\/ProgramIO.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "procelem\/ProgramIO.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/ProgramIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/ProgramIO.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/ProgramIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/ProgramIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/ProgramIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/ProgramIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/ProgramIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/ProgramIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/ProgramIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/ProgramIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/ProgramIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/ProgramIO.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/ProgramIO.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/ProgramIO.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/ProgramIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/ProgramIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/ProgramIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/ProgramIO.html", "kind" : "class"}], "testers" : [], "procelem.enums" : [{"name" : "procelem.enums.ABL", "shortDescription" : "", "object" : "procelem\/enums\/ABL$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/ABL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/ABL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/ABL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/ABL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/ABL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/ABL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/ABL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ABL$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ABL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ABL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/ABL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/ABL$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/ABL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/ABL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/ABL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/ABL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/ABL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.ARF", "shortDescription" : "", "object" : "procelem\/enums\/ARF$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/ARF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/ARF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/ARF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/ARF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/ARF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/ARF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/ARF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ARF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ARF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ARF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/ARF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/ARF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/ARF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/ARF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/ARF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/ARF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/ARF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.ComponentType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/ComponentType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/ComponentType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/ComponentType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/ComponentType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/ComponentType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/ComponentType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/ComponentType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ComponentType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ComponentType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/ComponentType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/ComponentType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/ComponentType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/ComponentType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/ComponentType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/ComponentType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/ComponentType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/ComponentType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/ComponentType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/ComponentType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "procelem\/enums\/ComponentType.html", "kind" : "trait"}, {"name" : "procelem.enums.EncodingType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/EncodingType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/EncodingType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/EncodingType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/EncodingType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/EncodingType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/EncodingType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/EncodingType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/EncodingType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/EncodingType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/EncodingType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/EncodingType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/EncodingType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/EncodingType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/EncodingType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/EncodingType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/EncodingType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/EncodingType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/EncodingType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/EncodingType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bitwidth", "tail" : "(): Int", "member" : "procelem.enums.EncodingType.bitwidth", "link" : "procelem\/enums\/EncodingType.html#bitwidth:Int", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "procelem\/enums\/EncodingType.html", "kind" : "trait"}, {"name" : "procelem.enums.FP16", "shortDescription" : "", "object" : "procelem\/enums\/FP16$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.FP16.bitwidth", "link" : "procelem\/enums\/FP16$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/FP16$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/FP16$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/FP16$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/FP16$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/FP16$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/FP16$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/FP16$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP16$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP16$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP16$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/FP16$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/FP16$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/FP16$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/FP16$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/FP16$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/FP16$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/FP16$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.FP32", "shortDescription" : "", "object" : "procelem\/enums\/FP32$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.FP32.bitwidth", "link" : "procelem\/enums\/FP32$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/FP32$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/FP32$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/FP32$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/FP32$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/FP32$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/FP32$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/FP32$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP32$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP32$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP32$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/FP32$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/FP32$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/FP32$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/FP32$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/FP32$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/FP32$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/FP32$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.FP64", "shortDescription" : "", "object" : "procelem\/enums\/FP64$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.FP64.bitwidth", "link" : "procelem\/enums\/FP64$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/FP64$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/FP64$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/FP64$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/FP64$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/FP64$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/FP64$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/FP64$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP64$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP64$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP64$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/FP64$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/FP64$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/FP64$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/FP64$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/FP64$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/FP64$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/FP64$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.FP8", "shortDescription" : "", "object" : "procelem\/enums\/FP8$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.FP8.bitwidth", "link" : "procelem\/enums\/FP8$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/FP8$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/FP8$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/FP8$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/FP8$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/FP8$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/FP8$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/FP8$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP8$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP8$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FP8$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/FP8$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/FP8$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/FP8$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/FP8$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/FP8$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/FP8$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/FP8$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.FuncBloc", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/FuncBloc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/FuncBloc.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/FuncBloc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/FuncBloc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/FuncBloc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/FuncBloc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/FuncBloc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FuncBloc.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FuncBloc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/FuncBloc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/FuncBloc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/FuncBloc.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/FuncBloc.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/FuncBloc.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/FuncBloc.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/FuncBloc.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/FuncBloc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/FuncBloc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/FuncBloc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "procelem\/enums\/FuncBloc.html", "kind" : "trait"}, {"name" : "procelem.enums.INT16", "shortDescription" : "", "object" : "procelem\/enums\/INT16$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.INT16.bitwidth", "link" : "procelem\/enums\/INT16$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/INT16$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/INT16$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/INT16$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/INT16$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/INT16$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/INT16$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/INT16$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT16$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT16$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT16$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/INT16$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/INT16$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/INT16$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/INT16$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/INT16$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/INT16$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/INT16$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.INT32", "shortDescription" : "", "object" : "procelem\/enums\/INT32$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.INT32.bitwidth", "link" : "procelem\/enums\/INT32$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/INT32$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/INT32$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/INT32$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/INT32$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/INT32$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/INT32$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/INT32$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT32$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT32$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT32$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/INT32$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/INT32$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/INT32$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/INT32$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/INT32$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/INT32$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/INT32$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.INT64", "shortDescription" : "", "object" : "procelem\/enums\/INT64$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.INT64.bitwidth", "link" : "procelem\/enums\/INT64$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/INT64$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/INT64$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/INT64$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/INT64$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/INT64$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/INT64$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/INT64$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT64$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT64$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT64$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/INT64$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/INT64$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/INT64$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/INT64$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/INT64$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/INT64$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/INT64$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.INT8", "shortDescription" : "", "object" : "procelem\/enums\/INT8$.html", "members_object" : [{"label" : "bitwidth", "tail" : ": Int", "member" : "procelem.enums.INT8.bitwidth", "link" : "procelem\/enums\/INT8$.html#bitwidth:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/INT8$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/INT8$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/INT8$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/INT8$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/INT8$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/INT8$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/INT8$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT8$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT8$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/INT8$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/INT8$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/INT8$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/INT8$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/INT8$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/INT8$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/INT8$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/INT8$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.IOPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/IOPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/IOPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/IOPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/IOPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/IOPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/IOPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/IOPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/IOPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/IOPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/IOPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/IOPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/IOPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/IOPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/IOPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/IOPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/IOPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/IOPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/IOPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/IOPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "procelem\/enums\/IOPort.html", "kind" : "trait"}, {"name" : "procelem.enums.LeftType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/LeftType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/LeftType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/LeftType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/LeftType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/LeftType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/LeftType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/LeftType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LeftType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LeftType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LeftType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/LeftType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/LeftType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/LeftType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/LeftType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/LeftType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/LeftType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/LeftType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/LeftType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/LeftType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "procelem\/enums\/LeftType.html", "kind" : "trait"}, {"name" : "procelem.enums.LP0", "shortDescription" : "", "object" : "procelem\/enums\/LP0$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/LP0$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/LP0$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/LP0$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/LP0$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/LP0$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/LP0$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/LP0$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP0$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP0$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP0$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/LP0$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/LP0$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/LP0$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/LP0$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/LP0$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/LP0$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/LP0$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.LP1", "shortDescription" : "", "object" : "procelem\/enums\/LP1$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/LP1$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/LP1$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/LP1$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/LP1$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/LP1$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/LP1$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/LP1$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP1$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP1$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP1$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/LP1$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/LP1$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/LP1$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/LP1$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/LP1$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/LP1$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/LP1$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.LP2", "shortDescription" : "", "object" : "procelem\/enums\/LP2$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/LP2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/LP2$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/LP2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/LP2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/LP2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/LP2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/LP2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/LP2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/LP2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/LP2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/LP2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/LP2$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/LP2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/LP2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/LP2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.MBL", "shortDescription" : "", "object" : "procelem\/enums\/MBL$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/MBL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/MBL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/MBL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/MBL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/MBL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/MBL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/MBL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/MBL$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/MBL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/MBL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/MBL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/MBL$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/MBL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/MBL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/MBL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/MBL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/MBL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.NBL", "shortDescription" : "", "object" : "procelem\/enums\/NBL$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/NBL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/NBL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/NBL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/NBL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/NBL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/NBL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/NBL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/NBL$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/NBL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/NBL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/NBL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/NBL$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/NBL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/NBL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/NBL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/NBL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/NBL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.PRF", "shortDescription" : "", "object" : "procelem\/enums\/PRF$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/PRF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/PRF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/PRF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/PRF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/PRF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/PRF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/PRF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/PRF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/PRF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/PRF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/PRF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/PRF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/PRF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/PRF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/PRF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/PRF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/PRF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.RFType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/RFType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/RFType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/RFType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/RFType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/RFType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/RFType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/RFType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RFType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RFType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RFType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/RFType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/RFType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/RFType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/RFType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/RFType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/RFType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/RFType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/RFType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/RFType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "procelem\/enums\/RFType.html", "kind" : "trait"}, {"name" : "procelem.enums.RightType", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/RightType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/RightType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/RightType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/RightType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/RightType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/RightType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/RightType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RightType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RightType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RightType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/RightType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/RightType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/enums\/RightType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/RightType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/RightType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/enums\/RightType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/RightType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/RightType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/RightType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "procelem\/enums\/RightType.html", "kind" : "trait"}, {"name" : "procelem.enums.RP0", "shortDescription" : "", "object" : "procelem\/enums\/RP0$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/RP0$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/RP0$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/RP0$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/RP0$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/RP0$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/RP0$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/RP0$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP0$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP0$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP0$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/RP0$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/RP0$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/RP0$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/RP0$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/RP0$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/RP0$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/RP0$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.RP1", "shortDescription" : "", "object" : "procelem\/enums\/RP1$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/RP1$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/RP1$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/RP1$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/RP1$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/RP1$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/RP1$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/RP1$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP1$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP1$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP1$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/RP1$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/RP1$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/RP1$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/RP1$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/RP1$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/RP1$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/RP1$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.RP2", "shortDescription" : "", "object" : "procelem\/enums\/RP2$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/RP2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/RP2$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/RP2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/RP2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/RP2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/RP2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/RP2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/RP2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/RP2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/RP2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/RP2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/RP2$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/RP2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/RP2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/RP2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "procelem.enums.WRF", "shortDescription" : "", "object" : "procelem\/enums\/WRF$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/enums\/WRF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/enums\/WRF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/enums\/WRF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/enums\/WRF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/enums\/WRF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/enums\/WRF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/enums\/WRF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/WRF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/WRF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/enums\/WRF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/enums\/WRF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/enums\/WRF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/enums\/WRF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/enums\/WRF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/enums\/WRF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/enums\/WRF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/enums\/WRF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "testers.switcher" : [{"name" : "testers.switcher.InstantiateTest", "shortDescription" : "", "members_class" : [{"member" : "testers.switcher.InstantiateTest#<init>", "error" : "unsupported entity"}, {"label" : "finish", "tail" : "(): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.finish", "link" : "testers\/switcher\/InstantiateTest.html#finish:Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Bundle, expected: Map[String, BigInt]): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/switcher\/InstantiateTest.html#expect(signal:chisel3.Bundle,expected:Map[String,BigInt]):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Aggregate, expected: IndexedSeq[BigInt]): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/switcher\/InstantiateTest.html#expect(signal:chisel3.core.Aggregate,expected:IndexedSeq[BigInt]):Boolean", "kind" : "def"}, {"label" : "expectFixedPoint", "tail" : "(signal: FixedPoint, expected: Double, msg: ⇒ String, epsilon: Double): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expectFixedPoint", "link" : "testers\/switcher\/InstantiateTest.html#expectFixedPoint(signal:chisel3.experimental.FixedPoint,expected:Double,msg:=>String,epsilon:Double):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Bits, expected: Int, msg: ⇒ String): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/switcher\/InstantiateTest.html#expect(signal:chisel3.Bits,expected:Int,msg:=>String):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(signal: Bits, expected: BigInt, msg: ⇒ String): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/switcher\/InstantiateTest.html#expect(signal:chisel3.Bits,expected:BigInt,msg:=>String):Boolean", "kind" : "def"}, {"label" : "expect", "tail" : "(good: Boolean, msg: ⇒ String): Boolean", "member" : "chisel3.iotesters.PeekPokeTester.expect", "link" : "testers\/switcher\/InstantiateTest.html#expect(good:Boolean,msg:=>String):Boolean", "kind" : "def"}, {"label" : "peekAt", "tail" : "(data: Mem[TT], off: Int): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.peekAt", "link" : "testers\/switcher\/InstantiateTest.html#peekAt[TT<:chisel3.Bits](data:chisel3.Mem[TT],off:Int):BigInt", "kind" : "def"}, {"label" : "peek", "tail" : "(signal: Bundle): LinkedHashMap[String, BigInt]", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/switcher\/InstantiateTest.html#peek(signal:chisel3.Bundle):scala.collection.mutable.LinkedHashMap[String,BigInt]", "kind" : "def"}, {"label" : "peek", "tail" : "(signal: Aggregate): Seq[BigInt]", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/switcher\/InstantiateTest.html#peek(signal:chisel3.core.Aggregate):Seq[BigInt]", "kind" : "def"}, {"label" : "peekFixedPoint", "tail" : "(signal: FixedPoint): Double", "member" : "chisel3.iotesters.PeekPokeTester.peekFixedPoint", "link" : "testers\/switcher\/InstantiateTest.html#peekFixedPoint(signal:chisel3.experimental.FixedPoint):Double", "kind" : "def"}, {"label" : "peek", "tail" : "(signal: Bits): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/switcher\/InstantiateTest.html#peek(signal:chisel3.Bits):BigInt", "kind" : "def"}, {"label" : "pokeAt", "tail" : "(data: Mem[TT], value: BigInt, off: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.pokeAt", "link" : "testers\/switcher\/InstantiateTest.html#pokeAt[TT<:chisel3.Bits](data:chisel3.Mem[TT],value:BigInt,off:Int):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Aggregate, value: IndexedSeq[BigInt]): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(signal:chisel3.core.Aggregate,value:IndexedSeq[BigInt]):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bundle, map: Map[String, BigInt]): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(signal:chisel3.Bundle,map:Map[String,BigInt]):Unit", "kind" : "def"}, {"label" : "pokeFixedPoint", "tail" : "(signal: FixedPoint, value: Double): Unit", "member" : "chisel3.iotesters.PeekPokeTester.pokeFixedPoint", "link" : "testers\/switcher\/InstantiateTest.html#pokeFixedPoint(signal:chisel3.experimental.FixedPoint,value:Double):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bits, value: Long): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(signal:chisel3.Bits,value:Long):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bits, value: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(signal:chisel3.Bits,value:Int):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(signal: Bits, value: BigInt): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(signal:chisel3.Bits,value:BigInt):Unit", "kind" : "def"}, {"label" : "peek", "tail" : "(path: String): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.peek", "link" : "testers\/switcher\/InstantiateTest.html#peek(path:String):BigInt", "kind" : "def"}, {"label" : "poke", "tail" : "(path: String, value: Long): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(path:String,value:Long):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(path: String, value: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(path:String,value:Int):Unit", "kind" : "def"}, {"label" : "poke", "tail" : "(path: String, value: BigInt): Unit", "member" : "chisel3.iotesters.PeekPokeTester.poke", "link" : "testers\/switcher\/InstantiateTest.html#poke(path:String,value:BigInt):Unit", "kind" : "def"}, {"label" : "step", "tail" : "(n: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.step", "link" : "testers\/switcher\/InstantiateTest.html#step(n:Int):Unit", "kind" : "def"}, {"label" : "reset", "tail" : "(n: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.reset", "link" : "testers\/switcher\/InstantiateTest.html#reset(n:Int):Unit", "kind" : "def"}, {"label" : "longToUnsignedBigInt", "tail" : "(x: Long): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.longToUnsignedBigInt", "link" : "testers\/switcher\/InstantiateTest.html#longToUnsignedBigInt(x:Long):BigInt", "kind" : "def"}, {"label" : "intToUnsignedBigInt", "tail" : "(x: Int): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.intToUnsignedBigInt", "link" : "testers\/switcher\/InstantiateTest.html#intToUnsignedBigInt(x:Int):BigInt", "kind" : "def"}, {"label" : "int", "tail" : "(x: Bits): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.int", "link" : "testers\/switcher\/InstantiateTest.html#int(x:chisel3.Bits):BigInt", "kind" : "implicit def"}, {"label" : "int", "tail" : "(x: Boolean): BigInt", "member" : "chisel3.iotesters.PeekPokeTester.int", "link" : "testers\/switcher\/InstantiateTest.html#int(x:Boolean):BigInt", "kind" : "implicit def"}, {"label" : "rnd", "tail" : ": Random", "member" : "chisel3.iotesters.PeekPokeTester.rnd", "link" : "testers\/switcher\/InstantiateTest.html#rnd:scala.util.Random", "kind" : "val"}, {"label" : "fail", "tail" : "(): Unit", "member" : "chisel3.iotesters.PeekPokeTester.fail", "link" : "testers\/switcher\/InstantiateTest.html#fail:Unit", "kind" : "def"}, {"label" : "t", "tail" : "(): Long", "member" : "chisel3.iotesters.PeekPokeTester.t", "link" : "testers\/switcher\/InstantiateTest.html#t:Long", "kind" : "def"}, {"label" : "incTime", "tail" : "(n: Int): Unit", "member" : "chisel3.iotesters.PeekPokeTester.incTime", "link" : "testers\/switcher\/InstantiateTest.html#incTime(n:Int):Unit", "kind" : "def"}, {"label" : "backend", "tail" : ": Backend", "member" : "chisel3.iotesters.PeekPokeTester.backend", "link" : "testers\/switcher\/InstantiateTest.html#backend:chisel3.iotesters.Backend", "kind" : "val"}, {"label" : "println", "tail" : "(msg: String): Unit", "member" : "chisel3.iotesters.PeekPokeTester.println", "link" : "testers\/switcher\/InstantiateTest.html#println(msg:String):Unit", "kind" : "def"}, {"label" : "_base", "tail" : ": Int", "member" : "chisel3.iotesters.PeekPokeTester._base", "link" : "testers\/switcher\/InstantiateTest.html#_base:Int", "kind" : "implicit val"}, {"label" : "_verbose", "tail" : ": Boolean", "member" : "chisel3.iotesters.PeekPokeTester._verbose", "link" : "testers\/switcher\/InstantiateTest.html#_verbose:Boolean", "kind" : "implicit val"}, {"label" : "optionsManager", "tail" : ": TesterOptionsManager", "member" : "chisel3.iotesters.PeekPokeTester.optionsManager", "link" : "testers\/switcher\/InstantiateTest.html#optionsManager:chisel3.iotesters.TesterOptionsManager", "kind" : "val"}, {"label" : "longToInt", "tail" : "(x: Long): Int", "member" : "chisel3.iotesters.PeekPokeTester.longToInt", "link" : "testers\/switcher\/InstantiateTest.html#longToInt(x:Long):Int", "kind" : "implicit def"}, {"label" : "logger", "tail" : ": TestErrorLog", "member" : "chisel3.iotesters.PeekPokeTester.logger", "link" : "testers\/switcher\/InstantiateTest.html#logger:chisel3.iotesters.TestErrorLog", "kind" : "implicit val"}, {"label" : "dut", "tail" : ": Switcher", "member" : "chisel3.iotesters.PeekPokeTester.dut", "link" : "testers\/switcher\/InstantiateTest.html#dut:T", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "testers\/switcher\/InstantiateTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "testers\/switcher\/InstantiateTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "testers\/switcher\/InstantiateTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "testers\/switcher\/InstantiateTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "testers\/switcher\/InstantiateTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "testers\/switcher\/InstantiateTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "testers\/switcher\/InstantiateTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/switcher\/InstantiateTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/switcher\/InstantiateTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/switcher\/InstantiateTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "testers\/switcher\/InstantiateTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "testers\/switcher\/InstantiateTest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "testers\/switcher\/InstantiateTest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "testers\/switcher\/InstantiateTest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "testers\/switcher\/InstantiateTest.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "testers\/switcher\/InstantiateTest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "testers\/switcher\/InstantiateTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "testers\/switcher\/InstantiateTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "testers\/switcher\/InstantiateTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "testers\/switcher\/InstantiateTest.html", "kind" : "class"}, {"name" : "testers.switcher.SwitcherSpec", "shortDescription" : "", "members_class" : [{"label" : "RegexWrapper", "tail" : "", "member" : "org.scalatest.Matchers.RegexWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#RegexWrapperextendsAnyRef", "kind" : "final class"}, {"label" : "StringShouldWrapper", "tail" : "", "member" : "org.scalatest.Matchers.StringShouldWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#StringShouldWrapperextendsMatchers.this.AnyShouldWrapper[String]withMatchers.this.StringShouldWrapperForVerb", "kind" : "final class"}, {"label" : "AnyShouldWrapper", "tail" : "", "member" : "org.scalatest.Matchers.AnyShouldWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#AnyShouldWrapper[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfFullyMatchWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfFullyMatchWordForCollectedString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfFullyMatchWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfIncludeWordForCollectedString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfIncludeWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfEndWithWordForCollectedString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfEndWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForCollectedString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfStartWithWordForCollectedString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfStartWithWordForCollectedStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForCollectedExtent", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfHaveWordForCollectedExtent", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfHaveWordForCollectedExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfCollectedAny", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedArray", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfBeWordForCollectedArray", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfBeWordForCollectedArray[T<:<?>]extendsMatchers.this.ResultOfBeWordForCollectedAny[Array[T]]", "kind" : "final class"}, {"label" : "ResultOfBeWordForCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfBeWordForCollectedAny", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfBeWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "sealed class"}, {"label" : "ResultOfContainWordForCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfContainWordForCollectedAny", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfContainWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfNotWordForCollectedAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfNotWordForCollectedAny", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfNotWordForCollectedAny[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfHaveWordForExtent", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfHaveWordForExtent", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfHaveWordForExtent[A<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "TheSameInstanceAsPhrase", "tail" : "", "member" : "org.scalatest.Matchers.TheSameInstanceAsPhrase", "link" : "testers\/switcher\/SwitcherSpec.html#TheSameInstanceAsPhraseextendsAnyRef", "kind" : "final class"}, {"label" : "AnWord", "tail" : "", "member" : "org.scalatest.Matchers.AnWord", "link" : "testers\/switcher\/SwitcherSpec.html#AnWordextendsAnyRef", "kind" : "final class"}, {"label" : "AWord", "tail" : "", "member" : "org.scalatest.Matchers.AWord", "link" : "testers\/switcher\/SwitcherSpec.html#AWordextendsAnyRef", "kind" : "final class"}, {"label" : "ValueWord", "tail" : "", "member" : "org.scalatest.Matchers.ValueWord", "link" : "testers\/switcher\/SwitcherSpec.html#ValueWordextendsAnyRef", "kind" : "final class"}, {"label" : "KeyWord", "tail" : "", "member" : "org.scalatest.Matchers.KeyWord", "link" : "testers\/switcher\/SwitcherSpec.html#KeyWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfFullyMatchWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfFullyMatchWordForString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfFullyMatchWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfEndWithWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfEndWithWordForString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfEndWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfStartWithWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfStartWithWordForString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfStartWithWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfIncludeWordForString", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfIncludeWordForString", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfIncludeWordForStringextendsAnyRef", "kind" : "final class"}, {"label" : "RegexWord", "tail" : "", "member" : "org.scalatest.Matchers.RegexWord", "link" : "testers\/switcher\/SwitcherSpec.html#RegexWordextendsAnyRef", "kind" : "final class"}, {"label" : "ResultOfBeWordForAny", "tail" : "", "member" : "org.scalatest.Matchers.ResultOfBeWordForAny", "link" : "testers\/switcher\/SwitcherSpec.html#ResultOfBeWordForAny[T<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "HavePropertyMatcherGenerator", "tail" : "", "member" : "org.scalatest.Matchers.HavePropertyMatcherGenerator", "link" : "testers\/switcher\/SwitcherSpec.html#HavePropertyMatcherGeneratorextendsAnyRef", "kind" : "final class"}, {"label" : "TheAfterWord", "tail" : "", "member" : "org.scalactic.Explicitly.TheAfterWord", "link" : "testers\/switcher\/SwitcherSpec.html#TheAfterWordextendsAnyRef", "kind" : "class"}, {"label" : "DeterminedByEquivalence", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedByEquivalence", "link" : "testers\/switcher\/SwitcherSpec.html#DeterminedByEquivalence[T<:<?>]extendsEquivalence[T]", "kind" : "class"}, {"label" : "DeterminedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DeterminedWord", "link" : "testers\/switcher\/SwitcherSpec.html#DeterminedWordextendsAnyRef", "kind" : "class"}, {"label" : "DecidedByEquality", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedByEquality", "link" : "testers\/switcher\/SwitcherSpec.html#DecidedByEquality[A<:<?>]extendsEquality[A]", "kind" : "class"}, {"label" : "DecidedWord", "tail" : "", "member" : "org.scalactic.Explicitly.DecidedWord", "link" : "testers\/switcher\/SwitcherSpec.html#DecidedWordextendsAnyRef", "kind" : "class"}, {"label" : "PlusOrMinusWrapper", "tail" : "", "member" : "org.scalactic.Tolerance.PlusOrMinusWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#PlusOrMinusWrapper[T<:<?>]extendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethodsAfterTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.InAndIgnoreMethodsAfterTaggedAs", "link" : "testers\/switcher\/SwitcherSpec.html#InAndIgnoreMethodsAfterTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "InAndIgnoreMethods", "tail" : "", "member" : "org.scalatest.FlatSpecLike.InAndIgnoreMethods", "link" : "testers\/switcher\/SwitcherSpec.html#InAndIgnoreMethodsextendsAnyRef", "kind" : "final class"}, {"label" : "TheyWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.TheyWord", "link" : "testers\/switcher\/SwitcherSpec.html#TheyWordextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbString", "tail" : "", "member" : "org.scalatest.FlatSpecLike.TheyVerbString", "link" : "testers\/switcher\/SwitcherSpec.html#TheyVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "TheyVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.TheyVerbStringTaggedAs", "link" : "testers\/switcher\/SwitcherSpec.html#TheyVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.IgnoreWord", "link" : "testers\/switcher\/SwitcherSpec.html#IgnoreWordextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbString", "tail" : "", "member" : "org.scalatest.FlatSpecLike.IgnoreVerbString", "link" : "testers\/switcher\/SwitcherSpec.html#IgnoreVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "IgnoreVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.IgnoreVerbStringTaggedAs", "link" : "testers\/switcher\/SwitcherSpec.html#IgnoreVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "ItWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.ItWord", "link" : "testers\/switcher\/SwitcherSpec.html#ItWordextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbString", "tail" : "", "member" : "org.scalatest.FlatSpecLike.ItVerbString", "link" : "testers\/switcher\/SwitcherSpec.html#ItVerbStringextendsAnyRef", "kind" : "final class"}, {"label" : "ItVerbStringTaggedAs", "tail" : "", "member" : "org.scalatest.FlatSpecLike.ItVerbStringTaggedAs", "link" : "testers\/switcher\/SwitcherSpec.html#ItVerbStringTaggedAsextendsAnyRef", "kind" : "final class"}, {"label" : "BehaviorWord", "tail" : "", "member" : "org.scalatest.FlatSpecLike.BehaviorWord", "link" : "testers\/switcher\/SwitcherSpec.html#BehaviorWordextendsAnyRef", "kind" : "final class"}, {"label" : "StringCanWrapperForVerb", "tail" : "", "member" : "org.scalatest.words.CanVerb.StringCanWrapperForVerb", "link" : "testers\/switcher\/SwitcherSpec.html#StringCanWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringMustWrapperForVerb", "tail" : "", "member" : "org.scalatest.words.MustVerb.StringMustWrapperForVerb", "link" : "testers\/switcher\/SwitcherSpec.html#StringMustWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "StringShouldWrapperForVerb", "tail" : "", "member" : "org.scalatest.words.ShouldVerb.StringShouldWrapperForVerb", "link" : "testers\/switcher\/SwitcherSpec.html#StringShouldWrapperForVerbextendsAnyRef", "kind" : "trait"}, {"label" : "NoArgTest", "tail" : "", "member" : "org.scalatest.TestSuite.NoArgTest", "link" : "testers\/switcher\/SwitcherSpec.html#NoArgTestextends()=>org.scalatest.OutcomewithTestData", "kind" : "trait"}, {"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "testers\/switcher\/SwitcherSpec.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "testers\/switcher\/SwitcherSpec.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "testers\/switcher\/SwitcherSpec.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"member" : "testers.switcher.SwitcherSpec#<init>", "error" : "unsupported entity"}, {"label" : "of", "tail" : "(ev: ClassTag[T]): ResultOfOfTypeInvocation[T]", "member" : "org.scalatest.Matchers.of", "link" : "testers\/switcher\/SwitcherSpec.html#of[T](implicitev:scala.reflect.ClassTag[T]):org.scalatest.words.ResultOfOfTypeInvocation[T]", "kind" : "def"}, {"label" : "convertToRegexWrapper", "tail" : "(o: Regex): RegexWrapper", "member" : "org.scalatest.Matchers.convertToRegexWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#convertToRegexWrapper(o:scala.util.matching.Regex):Matchers.this.RegexWrapper", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapper", "tail" : "(o: String)(pos: Position, prettifier: Prettifier): StringShouldWrapper", "member" : "org.scalatest.Matchers.convertToStringShouldWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#convertToStringShouldWrapper(o:String)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.StringShouldWrapper", "kind" : "implicit def"}, {"label" : "convertToAnyShouldWrapper", "tail" : "(o: T)(pos: Position, prettifier: Prettifier): AnyShouldWrapper[T]", "member" : "org.scalatest.Matchers.convertToAnyShouldWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#convertToAnyShouldWrapper[T](o:T)(implicitpos:org.scalactic.source.Position,implicitprettifier:org.scalactic.Prettifier):Matchers.this.AnyShouldWrapper[T]", "kind" : "implicit def"}, {"label" : "the", "tail" : "(arg0: ClassTag[T], pos: Position): ResultOfTheTypeInvocation[T]", "member" : "org.scalatest.Matchers.the", "link" : "testers\/switcher\/SwitcherSpec.html#the[T](implicitevidence$7:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfTheTypeInvocation[T]", "kind" : "def"}, {"label" : "an", "tail" : "(arg0: ClassTag[T]): ResultOfAnTypeInvocation[T]", "member" : "org.scalatest.Matchers.an", "link" : "testers\/switcher\/SwitcherSpec.html#an[T](implicitevidence$6:scala.reflect.ClassTag[T]):org.scalatest.words.ResultOfAnTypeInvocation[T]", "kind" : "def"}, {"label" : "a", "tail" : "(arg0: ClassTag[T]): ResultOfATypeInvocation[T]", "member" : "org.scalatest.Matchers.a", "link" : "testers\/switcher\/SwitcherSpec.html#a[T](implicitevidence$5:scala.reflect.ClassTag[T]):org.scalatest.words.ResultOfATypeInvocation[T]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.atMost", "link" : "testers\/switcher\/SwitcherSpec.html#atMost(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.atMost", "link" : "testers\/switcher\/SwitcherSpec.html#atMost[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atMost", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.atMost", "link" : "testers\/switcher\/SwitcherSpec.html#atMost[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.between", "link" : "testers\/switcher\/SwitcherSpec.html#between(from:Int,upTo:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.between", "link" : "testers\/switcher\/SwitcherSpec.html#between[K,V,JMAP<:<?>](from:Int,upTo:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "between", "tail" : "(from: Int, upTo: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.between", "link" : "testers\/switcher\/SwitcherSpec.html#between[E,C<:<?>](from:Int,upTo:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.no", "link" : "testers\/switcher\/SwitcherSpec.html#no(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.no", "link" : "testers\/switcher\/SwitcherSpec.html#no[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "no", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.no", "link" : "testers\/switcher\/SwitcherSpec.html#no[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.exactly", "link" : "testers\/switcher\/SwitcherSpec.html#exactly(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.exactly", "link" : "testers\/switcher\/SwitcherSpec.html#exactly[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "exactly", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.exactly", "link" : "testers\/switcher\/SwitcherSpec.html#exactly[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.every", "link" : "testers\/switcher\/SwitcherSpec.html#every(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.every", "link" : "testers\/switcher\/SwitcherSpec.html#every[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "every", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.every", "link" : "testers\/switcher\/SwitcherSpec.html#every[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.atLeast", "link" : "testers\/switcher\/SwitcherSpec.html#atLeast(num:Int,xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.atLeast", "link" : "testers\/switcher\/SwitcherSpec.html#atLeast[K,V,JMAP<:<?>](num:Int,xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "atLeast", "tail" : "(num: Int, xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.atLeast", "link" : "testers\/switcher\/SwitcherSpec.html#atLeast[E,C<:<?>](num:Int,xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: String)(collecting: Collecting[Char, String], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Char]", "member" : "org.scalatest.Matchers.all", "link" : "testers\/switcher\/SwitcherSpec.html#all(xs:String)(implicitcollecting:org.scalatest.enablers.Collecting[Char,String],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[Char]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: JMAP[K, V])(collecting: Collecting[Entry[K, V], JMAP[K, V]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[Entry[K, V]]", "member" : "org.scalatest.Matchers.all", "link" : "testers\/switcher\/SwitcherSpec.html#all[K,V,JMAP<:<?>](xs:JMAP[K,V])(implicitcollecting:org.scalatest.enablers.Collecting[org.scalatest.Entry[K,V],JMAP[K,V]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[org.scalatest.Entry[K,V]]", "kind" : "def"}, {"label" : "all", "tail" : "(xs: C[E])(collecting: Collecting[E, C[E]], prettifier: Prettifier, pos: Position): ResultOfCollectedAny[E]", "member" : "org.scalatest.Matchers.all", "link" : "testers\/switcher\/SwitcherSpec.html#all[E,C<:<?>](xs:C[E])(implicitcollecting:org.scalatest.enablers.Collecting[E,C[E]],implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.ResultOfCollectedAny[E]", "kind" : "def"}, {"label" : "message", "tail" : "(expectedMessage: String): ResultOfMessageWordApplication", "member" : "org.scalatest.Matchers.message", "link" : "testers\/switcher\/SwitcherSpec.html#message(expectedMessage:String):org.scalatest.words.ResultOfMessageWordApplication", "kind" : "def"}, {"label" : "thrownBy", "tail" : "(fun: ⇒ Any): ResultOfThrownByApplication", "member" : "org.scalatest.Matchers.thrownBy", "link" : "testers\/switcher\/SwitcherSpec.html#thrownBy(fun:=>Any):org.scalatest.words.ResultOfThrownByApplication", "kind" : "def"}, {"label" : "atMostOneElementOf", "tail" : "(elements: GenTraversable[R]): ResultOfAtMostOneElementOfApplication", "member" : "org.scalatest.Matchers.atMostOneElementOf", "link" : "testers\/switcher\/SwitcherSpec.html#atMostOneElementOf[R](elements:scala.collection.GenTraversable[R]):org.scalatest.words.ResultOfAtMostOneElementOfApplication", "kind" : "def"}, {"label" : "atMostOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtMostOneOfApplication", "member" : "org.scalatest.Matchers.atMostOneOf", "link" : "testers\/switcher\/SwitcherSpec.html#atMostOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfAtMostOneOfApplication", "kind" : "def"}, {"label" : "inOrderElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfInOrderElementsOfApplication", "member" : "org.scalatest.Matchers.inOrderElementsOf", "link" : "testers\/switcher\/SwitcherSpec.html#inOrderElementsOf[R](elements:scala.collection.GenTraversable[R]):org.scalatest.words.ResultOfInOrderElementsOfApplication", "kind" : "def"}, {"label" : "inOrder", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderApplication", "member" : "org.scalatest.Matchers.inOrder", "link" : "testers\/switcher\/SwitcherSpec.html#inOrder(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfInOrderApplication", "kind" : "def"}, {"label" : "allElementsOf", "tail" : "(elements: GenTraversable[R]): ResultOfAllElementsOfApplication", "member" : "org.scalatest.Matchers.allElementsOf", "link" : "testers\/switcher\/SwitcherSpec.html#allElementsOf[R](elements:scala.collection.GenTraversable[R]):org.scalatest.words.ResultOfAllElementsOfApplication", "kind" : "def"}, {"label" : "allOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAllOfApplication", "member" : "org.scalatest.Matchers.allOf", "link" : "testers\/switcher\/SwitcherSpec.html#allOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfAllOfApplication", "kind" : "def"}, {"label" : "inOrderOnly", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfInOrderOnlyApplication", "member" : "org.scalatest.Matchers.inOrderOnly", "link" : "testers\/switcher\/SwitcherSpec.html#inOrderOnly[T<:<?>](firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfInOrderOnlyApplication", "kind" : "def"}, {"label" : "only", "tail" : "(xs: Any*)(pos: Position): ResultOfOnlyApplication", "member" : "org.scalatest.Matchers.only", "link" : "testers\/switcher\/SwitcherSpec.html#only(xs:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfOnlyApplication", "kind" : "def"}, {"label" : "theSameElementsInOrderAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsInOrderAsApplication", "member" : "org.scalatest.Matchers.theSameElementsInOrderAs", "link" : "testers\/switcher\/SwitcherSpec.html#theSameElementsInOrderAs(xs:scala.collection.GenTraversable[_]):org.scalatest.words.ResultOfTheSameElementsInOrderAsApplication", "kind" : "def"}, {"label" : "theSameElementsAs", "tail" : "(xs: GenTraversable[_]): ResultOfTheSameElementsAsApplication", "member" : "org.scalatest.Matchers.theSameElementsAs", "link" : "testers\/switcher\/SwitcherSpec.html#theSameElementsAs(xs:scala.collection.GenTraversable[_]):org.scalatest.words.ResultOfTheSameElementsAsApplication", "kind" : "def"}, {"label" : "noElementsOf", "tail" : "(elements: GenTraversable[Any]): ResultOfNoElementsOfApplication", "member" : "org.scalatest.Matchers.noElementsOf", "link" : "testers\/switcher\/SwitcherSpec.html#noElementsOf(elements:scala.collection.GenTraversable[Any]):org.scalatest.words.ResultOfNoElementsOfApplication", "kind" : "def"}, {"label" : "noneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfNoneOfApplication", "member" : "org.scalatest.Matchers.noneOf", "link" : "testers\/switcher\/SwitcherSpec.html#noneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfNoneOfApplication", "kind" : "def"}, {"label" : "atLeastOneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfAtLeastOneElementOfApplication", "member" : "org.scalatest.Matchers.atLeastOneElementOf", "link" : "testers\/switcher\/SwitcherSpec.html#atLeastOneElementOf(elements:scala.collection.GenTraversable[Any]):org.scalatest.words.ResultOfAtLeastOneElementOfApplication", "kind" : "def"}, {"label" : "atLeastOneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfAtLeastOneOfApplication", "member" : "org.scalatest.Matchers.atLeastOneOf", "link" : "testers\/switcher\/SwitcherSpec.html#atLeastOneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfAtLeastOneOfApplication", "kind" : "def"}, {"label" : "oneElementOf", "tail" : "(elements: GenTraversable[Any]): ResultOfOneElementOfApplication", "member" : "org.scalatest.Matchers.oneElementOf", "link" : "testers\/switcher\/SwitcherSpec.html#oneElementOf(elements:scala.collection.GenTraversable[Any]):org.scalatest.words.ResultOfOneElementOfApplication", "kind" : "def"}, {"label" : "oneOf", "tail" : "(firstEle: Any, secondEle: Any, remainingEles: Any*)(pos: Position): ResultOfOneOfApplication", "member" : "org.scalatest.Matchers.oneOf", "link" : "testers\/switcher\/SwitcherSpec.html#oneOf(firstEle:Any,secondEle:Any,remainingEles:Any*)(implicitpos:org.scalactic.source.Position):org.scalatest.words.ResultOfOneOfApplication", "kind" : "def"}, {"label" : "definedAt", "tail" : "(right: T): ResultOfDefinedAt[T]", "member" : "org.scalatest.Matchers.definedAt", "link" : "testers\/switcher\/SwitcherSpec.html#definedAt[T](right:T):org.scalatest.words.ResultOfDefinedAt[T]", "kind" : "def"}, {"label" : ">=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanOrEqualToComparison[T]", "member" : "org.scalatest.Matchers.>=", "link" : "testers\/switcher\/SwitcherSpec.html#>=[T](right:T)(implicitevidence$4:Ordering[T]):org.scalatest.words.ResultOfGreaterThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : "<=", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanOrEqualToComparison[T]", "member" : "org.scalatest.Matchers.<=", "link" : "testers\/switcher\/SwitcherSpec.html#<=[T](right:T)(implicitevidence$3:Ordering[T]):org.scalatest.words.ResultOfLessThanOrEqualToComparison[T]", "kind" : "def"}, {"label" : ">", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfGreaterThanComparison[T]", "member" : "org.scalatest.Matchers.>", "link" : "testers\/switcher\/SwitcherSpec.html#>[T](right:T)(implicitevidence$2:Ordering[T]):org.scalatest.words.ResultOfGreaterThanComparison[T]", "kind" : "def"}, {"label" : "<", "tail" : "(right: T)(arg0: Ordering[T]): ResultOfLessThanComparison[T]", "member" : "org.scalatest.Matchers.<", "link" : "testers\/switcher\/SwitcherSpec.html#<[T](right:T)(implicitevidence$1:Ordering[T]):org.scalatest.words.ResultOfLessThanComparison[T]", "kind" : "def"}, {"label" : "regex", "tail" : ": RegexWord", "member" : "org.scalatest.Matchers.regex", "link" : "testers\/switcher\/SwitcherSpec.html#regex:Matchers.this.RegexWord", "kind" : "val"}, {"label" : "theSameInstanceAs", "tail" : ": TheSameInstanceAsPhrase", "member" : "org.scalatest.Matchers.theSameInstanceAs", "link" : "testers\/switcher\/SwitcherSpec.html#theSameInstanceAs:Matchers.this.TheSameInstanceAsPhrase", "kind" : "val"}, {"label" : "an", "tail" : ": AnWord", "member" : "org.scalatest.Matchers.an", "link" : "testers\/switcher\/SwitcherSpec.html#an:Matchers.this.AnWord", "kind" : "val"}, {"label" : "a", "tail" : ": AWord", "member" : "org.scalatest.Matchers.a", "link" : "testers\/switcher\/SwitcherSpec.html#a:Matchers.this.AWord", "kind" : "val"}, {"label" : "value", "tail" : ": ValueWord", "member" : "org.scalatest.Matchers.value", "link" : "testers\/switcher\/SwitcherSpec.html#value:Matchers.this.ValueWord", "kind" : "val"}, {"label" : "key", "tail" : ": KeyWord", "member" : "org.scalatest.Matchers.key", "link" : "testers\/switcher\/SwitcherSpec.html#key:Matchers.this.KeyWord", "kind" : "val"}, {"label" : "equal", "tail" : "(o: Null): Matcher[AnyRef]", "member" : "org.scalatest.Matchers.equal", "link" : "testers\/switcher\/SwitcherSpec.html#equal(o:Null):org.scalatest.matchers.Matcher[AnyRef]", "kind" : "def"}, {"label" : "equal", "tail" : "(spread: Spread[T]): Matcher[T]", "member" : "org.scalatest.Matchers.equal", "link" : "testers\/switcher\/SwitcherSpec.html#equal[T](spread:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalatest.matchers.Matcher[T]", "kind" : "def"}, {"label" : "convertSymbolToHavePropertyMatcherGenerator", "tail" : "(symbol: Symbol)(prettifier: Prettifier, pos: Position): HavePropertyMatcherGenerator", "member" : "org.scalatest.Matchers.convertSymbolToHavePropertyMatcherGenerator", "link" : "testers\/switcher\/SwitcherSpec.html#convertSymbolToHavePropertyMatcherGenerator(symbol:Symbol)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):Matchers.this.HavePropertyMatcherGenerator", "kind" : "implicit def"}, {"label" : "after", "tail" : ": TheAfterWord", "member" : "org.scalactic.Explicitly.after", "link" : "testers\/switcher\/SwitcherSpec.html#after:Explicitly.this.TheAfterWord", "kind" : "val"}, {"label" : "determined", "tail" : ": DeterminedWord", "member" : "org.scalactic.Explicitly.determined", "link" : "testers\/switcher\/SwitcherSpec.html#determined:Explicitly.this.DeterminedWord", "kind" : "val"}, {"label" : "decided", "tail" : ": DecidedWord", "member" : "org.scalactic.Explicitly.decided", "link" : "testers\/switcher\/SwitcherSpec.html#decided:Explicitly.this.DecidedWord", "kind" : "val"}, {"label" : "equal", "tail" : "(right: Any): MatcherFactory1[Any, Equality]", "member" : "org.scalatest.words.MatcherWords.equal", "link" : "testers\/switcher\/SwitcherSpec.html#equal(right:Any):org.scalatest.matchers.MatcherFactory1[Any,org.scalactic.Equality]", "kind" : "def"}, {"label" : "matchPattern", "tail" : ": MatchPatternWord", "member" : "org.scalatest.words.MatcherWords.matchPattern", "link" : "testers\/switcher\/SwitcherSpec.html#matchPattern:org.scalatest.words.MatchPatternWord", "kind" : "val"}, {"label" : "typeCheck", "tail" : ": TypeCheckWord", "member" : "org.scalatest.words.MatcherWords.typeCheck", "link" : "testers\/switcher\/SwitcherSpec.html#typeCheck:org.scalatest.words.TypeCheckWord", "kind" : "val"}, {"label" : "compile", "tail" : ": CompileWord", "member" : "org.scalatest.words.MatcherWords.compile", "link" : "testers\/switcher\/SwitcherSpec.html#compile:org.scalatest.words.CompileWord", "kind" : "val"}, {"label" : "empty", "tail" : ": EmptyWord", "member" : "org.scalatest.words.MatcherWords.empty", "link" : "testers\/switcher\/SwitcherSpec.html#empty:org.scalatest.words.EmptyWord", "kind" : "val"}, {"label" : "writable", "tail" : ": WritableWord", "member" : "org.scalatest.words.MatcherWords.writable", "link" : "testers\/switcher\/SwitcherSpec.html#writable:org.scalatest.words.WritableWord", "kind" : "val"}, {"label" : "readable", "tail" : ": ReadableWord", "member" : "org.scalatest.words.MatcherWords.readable", "link" : "testers\/switcher\/SwitcherSpec.html#readable:org.scalatest.words.ReadableWord", "kind" : "val"}, {"label" : "exist", "tail" : ": ExistWord", "member" : "org.scalatest.words.MatcherWords.exist", "link" : "testers\/switcher\/SwitcherSpec.html#exist:org.scalatest.words.ExistWord", "kind" : "val"}, {"label" : "noException", "tail" : "(pos: Position): NoExceptionWord", "member" : "org.scalatest.words.MatcherWords.noException", "link" : "testers\/switcher\/SwitcherSpec.html#noException(implicitpos:org.scalactic.source.Position):org.scalatest.words.NoExceptionWord", "kind" : "def"}, {"label" : "defined", "tail" : ": DefinedWord", "member" : "org.scalatest.words.MatcherWords.defined", "link" : "testers\/switcher\/SwitcherSpec.html#defined:org.scalatest.words.DefinedWord", "kind" : "val"}, {"label" : "sorted", "tail" : ": SortedWord", "member" : "org.scalatest.words.MatcherWords.sorted", "link" : "testers\/switcher\/SwitcherSpec.html#sorted:org.scalatest.words.SortedWord", "kind" : "val"}, {"label" : "size", "tail" : ": SizeWord", "member" : "org.scalatest.words.MatcherWords.size", "link" : "testers\/switcher\/SwitcherSpec.html#size:org.scalatest.words.SizeWord", "kind" : "val"}, {"label" : "length", "tail" : ": LengthWord", "member" : "org.scalatest.words.MatcherWords.length", "link" : "testers\/switcher\/SwitcherSpec.html#length:org.scalatest.words.LengthWord", "kind" : "val"}, {"label" : "not", "tail" : ": NotWord", "member" : "org.scalatest.words.MatcherWords.not", "link" : "testers\/switcher\/SwitcherSpec.html#not:org.scalatest.words.NotWord", "kind" : "val"}, {"label" : "contain", "tail" : ": ContainWord", "member" : "org.scalatest.words.MatcherWords.contain", "link" : "testers\/switcher\/SwitcherSpec.html#contain:org.scalatest.words.ContainWord", "kind" : "val"}, {"label" : "be", "tail" : ": BeWord", "member" : "org.scalatest.words.MatcherWords.be", "link" : "testers\/switcher\/SwitcherSpec.html#be:org.scalatest.words.BeWord", "kind" : "val"}, {"label" : "have", "tail" : ": HaveWord", "member" : "org.scalatest.words.MatcherWords.have", "link" : "testers\/switcher\/SwitcherSpec.html#have:org.scalatest.words.HaveWord", "kind" : "val"}, {"label" : "include", "tail" : ": IncludeWord", "member" : "org.scalatest.words.MatcherWords.include", "link" : "testers\/switcher\/SwitcherSpec.html#include:org.scalatest.words.IncludeWord", "kind" : "val"}, {"label" : "endWith", "tail" : ": EndWithWord", "member" : "org.scalatest.words.MatcherWords.endWith", "link" : "testers\/switcher\/SwitcherSpec.html#endWith:org.scalatest.words.EndWithWord", "kind" : "val"}, {"label" : "startWith", "tail" : ": StartWithWord", "member" : "org.scalatest.words.MatcherWords.startWith", "link" : "testers\/switcher\/SwitcherSpec.html#startWith:org.scalatest.words.StartWithWord", "kind" : "val"}, {"label" : "fullyMatch", "tail" : ": FullyMatchWord", "member" : "org.scalatest.words.MatcherWords.fullyMatch", "link" : "testers\/switcher\/SwitcherSpec.html#fullyMatch:org.scalatest.words.FullyMatchWord", "kind" : "val"}, {"label" : "convertNumericToPlusOrMinusWrapper", "tail" : "(pivot: T)(arg0: Numeric[T]): PlusOrMinusWrapper[T]", "member" : "org.scalactic.Tolerance.convertNumericToPlusOrMinusWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#convertNumericToPlusOrMinusWrapper[T](pivot:T)(implicitevidence$2:Numeric[T]):Tolerance.this.PlusOrMinusWrapper[T]", "kind" : "implicit def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.scalatest.FlatSpec.toString", "link" : "testers\/switcher\/SwitcherSpec.html#toString():String", "kind" : "def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.FlatSpecLike.testDataFor", "link" : "testers\/switcher\/SwitcherSpec.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.FlatSpecLike.styleName", "link" : "testers\/switcher\/SwitcherSpec.html#styleName:String", "kind" : "final val"}, {"label" : "behave", "tail" : ": BehaveWord", "member" : "org.scalatest.FlatSpecLike.behave", "link" : "testers\/switcher\/SwitcherSpec.html#behave:org.scalatest.words.BehaveWord", "kind" : "val"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FlatSpecLike.run", "link" : "testers\/switcher\/SwitcherSpec.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.FlatSpecLike.testNames", "link" : "testers\/switcher\/SwitcherSpec.html#testNames:Set[String]", "kind" : "def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.FlatSpecLike.runTests", "link" : "testers\/switcher\/SwitcherSpec.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.FlatSpecLike.runTest", "link" : "testers\/switcher\/SwitcherSpec.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.FlatSpecLike.tags", "link" : "testers\/switcher\/SwitcherSpec.html#tags:Map[String,Set[String]]", "kind" : "def"}, {"label" : "shorthandSharedTestRegistrationFunction", "tail" : ": StringVerbBehaveLikeInvocation", "member" : "org.scalatest.FlatSpecLike.shorthandSharedTestRegistrationFunction", "link" : "testers\/switcher\/SwitcherSpec.html#shorthandSharedTestRegistrationFunction:org.scalatest.words.StringVerbBehaveLikeInvocation", "kind" : "implicit val"}, {"label" : "shorthandTestRegistrationFunction", "tail" : ": StringVerbStringInvocation", "member" : "org.scalatest.FlatSpecLike.shorthandTestRegistrationFunction", "link" : "testers\/switcher\/SwitcherSpec.html#shorthandTestRegistrationFunction:org.scalatest.words.StringVerbStringInvocation", "kind" : "implicit val"}, {"label" : "convertToInAndIgnoreMethodsAfterTaggedAs", "tail" : "(resultOfTaggedAsInvocation: ResultOfTaggedAsInvocation): InAndIgnoreMethodsAfterTaggedAs", "member" : "org.scalatest.FlatSpecLike.convertToInAndIgnoreMethodsAfterTaggedAs", "link" : "testers\/switcher\/SwitcherSpec.html#convertToInAndIgnoreMethodsAfterTaggedAs(resultOfTaggedAsInvocation:org.scalatest.words.ResultOfTaggedAsInvocation):FlatSpecLike.this.InAndIgnoreMethodsAfterTaggedAs", "kind" : "implicit def"}, {"label" : "convertToInAndIgnoreMethods", "tail" : "(resultOfStringPassedToVerb: ResultOfStringPassedToVerb): InAndIgnoreMethods", "member" : "org.scalatest.FlatSpecLike.convertToInAndIgnoreMethods", "link" : "testers\/switcher\/SwitcherSpec.html#convertToInAndIgnoreMethods(resultOfStringPassedToVerb:org.scalatest.words.ResultOfStringPassedToVerb):FlatSpecLike.this.InAndIgnoreMethods", "kind" : "implicit def"}, {"label" : "they", "tail" : ": TheyWord", "member" : "org.scalatest.FlatSpecLike.they", "link" : "testers\/switcher\/SwitcherSpec.html#they:FlatSpecLike.this.TheyWord", "kind" : "val"}, {"label" : "ignore", "tail" : ": IgnoreWord", "member" : "org.scalatest.FlatSpecLike.ignore", "link" : "testers\/switcher\/SwitcherSpec.html#ignore:FlatSpecLike.this.IgnoreWord", "kind" : "val"}, {"label" : "it", "tail" : ": ItWord", "member" : "org.scalatest.FlatSpecLike.it", "link" : "testers\/switcher\/SwitcherSpec.html#it:FlatSpecLike.this.ItWord", "kind" : "val"}, {"label" : "behavior", "tail" : ": BehaviorWord", "member" : "org.scalatest.FlatSpecLike.behavior", "link" : "testers\/switcher\/SwitcherSpec.html#behavior:FlatSpecLike.this.BehaviorWord", "kind" : "val"}, {"label" : "registerIgnoredTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FlatSpecLike.registerIgnoredTest", "link" : "testers\/switcher\/SwitcherSpec.html#registerIgnoredTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "registerTest", "tail" : "(testText: String, testTags: Tag*)(testFun: ⇒ Any)(pos: Position): Unit", "member" : "org.scalatest.FlatSpecLike.registerTest", "link" : "testers\/switcher\/SwitcherSpec.html#registerTest(testText:String,testTags:org.scalatest.Tag*)(testFun:=>Any)(implicitpos:org.scalactic.source.Position):Unit", "kind" : "final def"}, {"label" : "markup", "tail" : "(): Documenter", "member" : "org.scalatest.FlatSpecLike.markup", "link" : "testers\/switcher\/SwitcherSpec.html#markup:org.scalatest.Documenter", "kind" : "def"}, {"label" : "alert", "tail" : "(): Alerter", "member" : "org.scalatest.FlatSpecLike.alert", "link" : "testers\/switcher\/SwitcherSpec.html#alert:org.scalatest.Alerter", "kind" : "def"}, {"label" : "note", "tail" : "(): Notifier", "member" : "org.scalatest.FlatSpecLike.note", "link" : "testers\/switcher\/SwitcherSpec.html#note:org.scalatest.Notifier", "kind" : "def"}, {"label" : "info", "tail" : "(): Informer", "member" : "org.scalatest.FlatSpecLike.info", "link" : "testers\/switcher\/SwitcherSpec.html#info:org.scalatest.Informer", "kind" : "def"}, {"label" : "convertToStringCanWrapper", "tail" : "(o: String)(position: Position): StringCanWrapperForVerb", "member" : "org.scalatest.words.CanVerb.convertToStringCanWrapper", "link" : "testers\/switcher\/SwitcherSpec.html#convertToStringCanWrapper(o:String)(implicitposition:org.scalactic.source.Position):CanVerb.this.StringCanWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringMustWrapperForVerb", "tail" : "(o: String)(position: Position): StringMustWrapperForVerb", "member" : "org.scalatest.words.MustVerb.convertToStringMustWrapperForVerb", "link" : "testers\/switcher\/SwitcherSpec.html#convertToStringMustWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):MustVerb.this.StringMustWrapperForVerb", "kind" : "implicit def"}, {"label" : "convertToStringShouldWrapperForVerb", "tail" : "(o: String)(position: Position): StringShouldWrapperForVerb", "member" : "org.scalatest.words.ShouldVerb.convertToStringShouldWrapperForVerb", "link" : "testers\/switcher\/SwitcherSpec.html#convertToStringShouldWrapperForVerb(o:String)(implicitposition:org.scalactic.source.Position):ShouldVerb.this.StringShouldWrapperForVerb", "kind" : "implicit def"}, {"label" : "withFixture", "tail" : "(test: NoArgTest): Outcome", "member" : "org.scalatest.TestSuite.withFixture", "link" : "testers\/switcher\/SwitcherSpec.html#withFixture(test:TestSuite.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.Suite.rerunner", "link" : "testers\/switcher\/SwitcherSpec.html#rerunner:Option[String]", "kind" : "def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.Suite.expectedTestCount", "link" : "testers\/switcher\/SwitcherSpec.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteId", "link" : "testers\/switcher\/SwitcherSpec.html#suiteId:String", "kind" : "def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.Suite.suiteName", "link" : "testers\/switcher\/SwitcherSpec.html#suiteName:String", "kind" : "def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.Suite.runNestedSuites", "link" : "testers\/switcher\/SwitcherSpec.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "def"}, {"label" : "execute", "tail" : "(): Unit", "member" : "org.scalatest.Suite.execute", "link" : "testers\/switcher\/SwitcherSpec.html#execute:Unit", "kind" : "final def"}, {"label" : "execute", "tail" : "(testName: String, configMap: ConfigMap, color: Boolean, durations: Boolean, shortstacks: Boolean, fullstacks: Boolean, stats: Boolean): Unit", "member" : "org.scalatest.Suite.execute", "link" : "testers\/switcher\/SwitcherSpec.html#execute(testName:String,configMap:org.scalatest.ConfigMap,color:Boolean,durations:Boolean,shortstacks:Boolean,fullstacks:Boolean,stats:Boolean):Unit", "kind" : "final def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.Suite.nestedSuites", "link" : "testers\/switcher\/SwitcherSpec.html#nestedSuites:scala.collection.immutable.IndexedSeq[org.scalatest.Suite]", "kind" : "def"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "testers\/switcher\/SwitcherSpec.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "testers\/switcher\/SwitcherSpec.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "testers\/switcher\/SwitcherSpec.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "testers\/switcher\/SwitcherSpec.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/switcher\/SwitcherSpec.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/switcher\/SwitcherSpec.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/switcher\/SwitcherSpec.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "testers\/switcher\/SwitcherSpec.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/switcher\/SwitcherSpec.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/switcher\/SwitcherSpec.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/switcher\/SwitcherSpec.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "testers\/switcher\/SwitcherSpec.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "testers\/switcher\/SwitcherSpec.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "testers\/switcher\/SwitcherSpec.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "testers\/switcher\/SwitcherSpec.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "testers\/switcher\/SwitcherSpec.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "testers\/switcher\/SwitcherSpec.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "testers\/switcher\/SwitcherSpec.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "testers\/switcher\/SwitcherSpec.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "testers\/switcher\/SwitcherSpec.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "testers\/switcher\/SwitcherSpec.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "testers\/switcher\/SwitcherSpec.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "testers\/switcher\/SwitcherSpec.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "testers\/switcher\/SwitcherSpec.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "testers\/switcher\/SwitcherSpec.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "testers\/switcher\/SwitcherSpec.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "testers\/switcher\/SwitcherSpec.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "testers\/switcher\/SwitcherSpec.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "testers\/switcher\/SwitcherSpec.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "testers\/switcher\/SwitcherSpec.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "testers\/switcher\/SwitcherSpec.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "testers\/switcher\/SwitcherSpec.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "testers\/switcher\/SwitcherSpec.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "testers\/switcher\/SwitcherSpec.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "testers\/switcher\/SwitcherSpec.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "testers\/switcher\/SwitcherSpec.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "testers\/switcher\/SwitcherSpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "testers\/switcher\/SwitcherSpec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "testers\/switcher\/SwitcherSpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "testers\/switcher\/SwitcherSpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "testers\/switcher\/SwitcherSpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "testers\/switcher\/SwitcherSpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "testers\/switcher\/SwitcherSpec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/switcher\/SwitcherSpec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/switcher\/SwitcherSpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "testers\/switcher\/SwitcherSpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "testers\/switcher\/SwitcherSpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "testers\/switcher\/SwitcherSpec.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "testers\/switcher\/SwitcherSpec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "testers\/switcher\/SwitcherSpec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "testers\/switcher\/SwitcherSpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "testers\/switcher\/SwitcherSpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "testers\/switcher\/SwitcherSpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "testers\/switcher\/SwitcherSpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "testers\/switcher\/SwitcherSpec.html", "kind" : "class"}], "procelem.components" : [{"name" : "procelem.components.RegFile", "shortDescription" : "", "members_class" : [{"member" : "procelem.components.RegFile#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/components\/RegFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/components\/RegFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/components\/RegFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/components\/RegFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/components\/RegFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/components\/RegFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/components\/RegFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/RegFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/RegFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/RegFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/components\/RegFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/components\/RegFile.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/components\/RegFile.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/components\/RegFile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/components\/RegFile.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/components\/RegFile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/components\/RegFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/components\/RegFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/components\/RegFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/components\/RegFile.html", "kind" : "class"}, {"name" : "procelem.components.RegFileIO", "shortDescription" : "", "members_class" : [{"member" : "procelem.components.RegFileIO#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/components\/RegFileIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/components\/RegFileIO.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/components\/RegFileIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/components\/RegFileIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/components\/RegFileIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/components\/RegFileIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/components\/RegFileIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/RegFileIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/RegFileIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/RegFileIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/components\/RegFileIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/components\/RegFileIO.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/components\/RegFileIO.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/components\/RegFileIO.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "procelem\/components\/RegFileIO.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "procelem\/components\/RegFileIO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/components\/RegFileIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/components\/RegFileIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/components\/RegFileIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/components\/RegFileIO.html", "kind" : "class"}, {"name" : "procelem.components.Switcher", "shortDescription" : "Connects the various components together based on reprogrammable registers", "members_class" : [{"label" : "io", "tail" : ": SwitcherIO", "member" : "procelem.components.Switcher.io", "link" : "procelem\/components\/Switcher.html#io:procelem.components.SwitcherIO", "kind" : "val"}, {"member" : "procelem.components.Switcher#<init>", "error" : "unsupported entity"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.core.LegacyModule.nameIds", "link" : "procelem\/components\/Switcher.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "_compatIoPortBound", "tail" : "(): Boolean", "member" : "chisel3.core.LegacyModule._compatIoPortBound", "link" : "procelem\/components\/Switcher.html#_compatIoPortBound():Boolean", "kind" : "def"}, {"label" : "override_reset", "tail" : ": Option[Bool]", "member" : "chisel3.core.LegacyModule.override_reset", "link" : "procelem\/components\/Switcher.html#override_reset:Option[chisel3.core.Bool]", "kind" : "var"}, {"label" : "override_clock", "tail" : ": Option[Clock]", "member" : "chisel3.core.LegacyModule.override_clock", "link" : "procelem\/components\/Switcher.html#override_clock:Option[chisel3.core.Clock]", "kind" : "var"}, {"label" : "reset", "tail" : ": Reset", "member" : "chisel3.core.ImplicitModule.reset", "link" : "procelem\/components\/Switcher.html#reset:chisel3.core.Reset", "kind" : "val"}, {"label" : "clock", "tail" : ": Clock", "member" : "chisel3.core.ImplicitModule.clock", "link" : "procelem\/components\/Switcher.html#clock:chisel3.core.Clock", "kind" : "val"}, {"label" : "compileOptions", "tail" : ": CompileOptions", "member" : "chisel3.core.UserModule.compileOptions", "link" : "procelem\/components\/Switcher.html#compileOptions:chisel3.core.CompileOptions", "kind" : "val"}, {"label" : "getPorts", "tail" : ": Seq[Port]", "member" : "chisel3.core.UserModule.getPorts", "link" : "procelem\/components\/Switcher.html#getPorts:Seq[chisel3.internal.firrtl.Port]", "kind" : "lazy val"}, {"label" : "getCommands", "tail" : "(): Seq[Command]", "member" : "chisel3.core.UserModule.getCommands", "link" : "procelem\/components\/Switcher.html#getCommands:Seq[chisel3.internal.firrtl.Command]", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.core.BaseModule.instanceName", "link" : "procelem\/components\/Switcher.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.core.BaseModule.IO", "link" : "procelem\/components\/Switcher.html#IO[T<:chisel3.core.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.core.BaseModule._bindIoInPlace", "link" : "procelem\/components\/Switcher.html#_bindIoInPlace(iodef:chisel3.core.Data):Unit", "kind" : "def"}, {"label" : "annotate", "tail" : "(annotation: ChiselAnnotation): Unit", "member" : "chisel3.core.BaseModule.annotate", "link" : "procelem\/components\/Switcher.html#annotate(annotation:chisel3.core.ChiselAnnotation):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.core.BaseModule._compatAutoWrapPorts", "link" : "procelem\/components\/Switcher.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.core.BaseModule.toNamed", "link" : "procelem\/components\/Switcher.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.core.BaseModule.name", "link" : "procelem\/components\/Switcher.html#name:String", "kind" : "final val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.core.BaseModule.desiredName", "link" : "procelem\/components\/Switcher.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.core.BaseModule.portsSize", "link" : "procelem\/components\/Switcher.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.core.BaseModule.portsContains", "link" : "procelem\/components\/Switcher.html#portsContains(elem:chisel3.core.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.core.BaseModule.getModulePorts", "link" : "procelem\/components\/Switcher.html#getModulePorts:Seq[chisel3.core.Data]", "kind" : "def"}, {"label" : "getIds", "tail" : "(): Seq[HasId]", "member" : "chisel3.core.BaseModule.getIds", "link" : "procelem\/components\/Switcher.html#getIds:Seq[chisel3.internal.HasId]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.core.BaseModule._closed", "link" : "procelem\/components\/Switcher.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "procelem\/components\/Switcher.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "procelem\/components\/Switcher.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "procelem\/components\/Switcher.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "procelem\/components\/Switcher.html#pathName:String", "kind" : "def"}, {"label" : "suggestName", "tail" : "(name: ⇒ String): Switcher.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "procelem\/components\/Switcher.html#suggestName(name:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "procelem\/components\/Switcher.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "procelem\/components\/Switcher.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/components\/Switcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/components\/Switcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/components\/Switcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/components\/Switcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/components\/Switcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/components\/Switcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/components\/Switcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/Switcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/Switcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/Switcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/components\/Switcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/components\/Switcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/components\/Switcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/components\/Switcher.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/components\/Switcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/components\/Switcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/components\/Switcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/components\/Switcher.html", "kind" : "class"}, {"name" : "procelem.components.SwitcherIO", "shortDescription" : "", "members_class" : [{"label" : "rightDataSink", "tail" : ": Vec[Vec[DecoupledIO[UInt]]]", "member" : "procelem.components.SwitcherIO.rightDataSink", "link" : "procelem\/components\/SwitcherIO.html#rightDataSink:chisel3.Vec[chisel3.Vec[chisel3.util.DecoupledIO[chisel3.UInt]]]", "kind" : "val"}, {"label" : "leftDataSink", "tail" : ": Vec[Vec[DecoupledIO[Vec[UInt]]]]", "member" : "procelem.components.SwitcherIO.leftDataSink", "link" : "procelem\/components\/SwitcherIO.html#leftDataSink:chisel3.Vec[chisel3.Vec[chisel3.util.DecoupledIO[chisel3.Vec[chisel3.UInt]]]]", "kind" : "val"}, {"label" : "rightDataSource", "tail" : ": Vec[Vec[DecoupledIO[UInt]]]", "member" : "procelem.components.SwitcherIO.rightDataSource", "link" : "procelem\/components\/SwitcherIO.html#rightDataSource:chisel3.Vec[chisel3.Vec[chisel3.util.DecoupledIO[chisel3.UInt]]]", "kind" : "val"}, {"label" : "leftDataSource", "tail" : ": Vec[Vec[DecoupledIO[Vec[UInt]]]]", "member" : "procelem.components.SwitcherIO.leftDataSource", "link" : "procelem\/components\/SwitcherIO.html#leftDataSource:chisel3.Vec[chisel3.Vec[chisel3.util.DecoupledIO[chisel3.Vec[chisel3.UInt]]]]", "kind" : "val"}, {"label" : "programWire", "tail" : ": ProgramIO", "member" : "procelem.components.SwitcherIO.programWire", "link" : "procelem\/components\/SwitcherIO.html#programWire:procelem.ProgramIO", "kind" : "val"}, {"label" : "cloneType", "tail" : "(): SwitcherIO.this.type", "member" : "procelem.components.SwitcherIO.cloneType", "link" : "procelem\/components\/SwitcherIO.html#cloneType:SwitcherIO.this.type", "kind" : "def"}, {"member" : "procelem.components.SwitcherIO#<init>", "error" : "unsupported entity"}, {"label" : "toPrintable", "tail" : "(): Printable", "member" : "chisel3.core.Bundle.toPrintable", "link" : "procelem\/components\/SwitcherIO.html#toPrintable:chisel3.core.Printable", "kind" : "def"}, {"label" : "ignoreSeq", "tail" : "(): Boolean", "member" : "chisel3.core.Bundle.ignoreSeq", "link" : "procelem\/components\/SwitcherIO.html#ignoreSeq:Boolean", "kind" : "def"}, {"label" : "elements", "tail" : ": ListMap[String, Data]", "member" : "chisel3.core.Bundle.elements", "link" : "procelem\/components\/SwitcherIO.html#elements:scala.collection.immutable.ListMap[String,chisel3.core.Data]", "kind" : "final lazy val"}, {"label" : "className", "tail" : "(): String", "member" : "chisel3.core.Bundle.className", "link" : "procelem\/components\/SwitcherIO.html#className:String", "kind" : "def"}, {"label" : "getElements", "tail" : "(): Seq[Data]", "member" : "chisel3.core.Record.getElements", "link" : "procelem\/components\/SwitcherIO.html#getElements:Seq[chisel3.core.Data]", "kind" : "def"}, {"label" : "do_asUInt", "tail" : "(sourceInfo: SourceInfo, compileOptions: CompileOptions): UInt", "member" : "chisel3.core.Aggregate.do_asUInt", "link" : "procelem\/components\/SwitcherIO.html#do_asUInt(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.core.CompileOptions):chisel3.core.UInt", "kind" : "def"}, {"label" : "toBits", "tail" : "(compileOptions: CompileOptions): UInt", "member" : "chisel3.core.Data.toBits", "link" : "procelem\/components\/SwitcherIO.html#toBits(implicitcompileOptions:chisel3.core.CompileOptions):chisel3.core.UInt", "kind" : "def"}, {"label" : "asUInt", "tail" : "(): UInt", "member" : "chisel3.core.Data.asUInt", "link" : "procelem\/components\/SwitcherIO.html#asUInt():chisel3.core.UInt", "kind" : "final macro def"}, {"label" : "do_asTypeOf", "tail" : "(that: T)(sourceInfo: SourceInfo, compileOptions: CompileOptions): T", "member" : "chisel3.core.Data.do_asTypeOf", "link" : "procelem\/components\/SwitcherIO.html#do_asTypeOf[T<:chisel3.core.Data](that:T)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitcompileOptions:chisel3.core.CompileOptions):T", "kind" : "def"}, {"label" : "asTypeOf", "tail" : "(that: T): T", "member" : "chisel3.core.Data.asTypeOf", "link" : "procelem\/components\/SwitcherIO.html#asTypeOf[T<:chisel3.core.Data](that:T):T", "kind" : "macro def"}, {"label" : "widthOption", "tail" : "(): Option[Int]", "member" : "chisel3.core.Data.widthOption", "link" : "procelem\/components\/SwitcherIO.html#widthOption:Option[Int]", "kind" : "final def"}, {"label" : "isWidthKnown", "tail" : "(): Boolean", "member" : "chisel3.core.Data.isWidthKnown", "link" : "procelem\/components\/SwitcherIO.html#isWidthKnown:Boolean", "kind" : "final def"}, {"label" : "getWidth", "tail" : "(): Int", "member" : "chisel3.core.Data.getWidth", "link" : "procelem\/components\/SwitcherIO.html#getWidth:Int", "kind" : "final def"}, {"label" : "isLit", "tail" : "(): Boolean", "member" : "chisel3.core.Data.isLit", "link" : "procelem\/components\/SwitcherIO.html#isLit():Boolean", "kind" : "def"}, {"label" : "litValue", "tail" : "(): BigInt", "member" : "chisel3.core.Data.litValue", "link" : "procelem\/components\/SwitcherIO.html#litValue():BigInt", "kind" : "def"}, {"label" : "litArg", "tail" : "(): Option[LitArg]", "member" : "chisel3.core.Data.litArg", "link" : "procelem\/components\/SwitcherIO.html#litArg():Option[chisel3.internal.firrtl.LitArg]", "kind" : "def"}, {"label" : "<>", "tail" : "(that: Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.core.Data.<>", "link" : "procelem\/components\/SwitcherIO.html#<>(that:chisel3.core.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.core.CompileOptions):Unit", "kind" : "final def"}, {"label" : ":=", "tail" : "(that: Data)(sourceInfo: SourceInfo, connectionCompileOptions: CompileOptions): Unit", "member" : "chisel3.core.Data.:=", "link" : "procelem\/components\/SwitcherIO.html#:=(that:chisel3.core.Data)(implicitsourceInfo:chisel3.internal.sourceinfo.SourceInfo,implicitconnectionCompileOptions:chisel3.core.CompileOptions):Unit", "kind" : "final def"}, {"label" : "binding_=", "tail" : "(target: Binding): Unit", "member" : "chisel3.core.Data.binding_=", "link" : "procelem\/components\/SwitcherIO.html#binding_=(target:chisel3.core.Binding):Unit", "kind" : "def"}, {"label" : "toNamed", "tail" : "(): ComponentName", "member" : "chisel3.internal.NamedComponent.toNamed", "link" : "procelem\/components\/SwitcherIO.html#toNamed:firrtl.annotations.ComponentName", "kind" : "final def"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "procelem\/components\/SwitcherIO.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "procelem\/components\/SwitcherIO.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "procelem\/components\/SwitcherIO.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "procelem\/components\/SwitcherIO.html#pathName:String", "kind" : "def"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.internal.HasId.instanceName", "link" : "procelem\/components\/SwitcherIO.html#instanceName:String", "kind" : "def"}, {"label" : "suggestName", "tail" : "(name: ⇒ String): SwitcherIO.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "procelem\/components\/SwitcherIO.html#suggestName(name:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "procelem\/components\/SwitcherIO.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "procelem\/components\/SwitcherIO.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "procelem\/components\/SwitcherIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "procelem\/components\/SwitcherIO.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "procelem\/components\/SwitcherIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "procelem\/components\/SwitcherIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "procelem\/components\/SwitcherIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "procelem\/components\/SwitcherIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "procelem\/components\/SwitcherIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/SwitcherIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/SwitcherIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "procelem\/components\/SwitcherIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "procelem\/components\/SwitcherIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "procelem\/components\/SwitcherIO.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "procelem\/components\/SwitcherIO.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "procelem\/components\/SwitcherIO.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "procelem\/components\/SwitcherIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "procelem\/components\/SwitcherIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "procelem\/components\/SwitcherIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "procelem\/components\/SwitcherIO.html", "kind" : "class"}]};